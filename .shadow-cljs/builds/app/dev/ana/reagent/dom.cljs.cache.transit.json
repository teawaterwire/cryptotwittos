["^ ","~:output",["^ ","~:js","goog.provide('reagent.dom');\ngoog.require('cljs.core');\nvar module$node_modules$react_dom$index=shadow.js.require(\"module$node_modules$react_dom$index\", {});\ngoog.require('reagent.impl.util');\ngoog.require('reagent.impl.template');\ngoog.require('reagent.impl.batching');\ngoog.require('reagent.ratom');\ngoog.require('reagent.debug');\ngoog.require('reagent.interop');\nif(typeof reagent.dom.imported !== 'undefined'){\n} else {\nreagent.dom.imported = null;\n}\nif(typeof reagent.dom.roots !== 'undefined'){\n} else {\nreagent.dom.roots = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\nreagent.dom.unmount_comp = (function reagent$dom$unmount_comp(container){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.dom.roots,cljs.core.dissoc,container);\n\nreturn module$node_modules$react_dom$index.unmountComponentAtNode(container);\n});\nreagent.dom.render_comp = (function reagent$dom$render_comp(comp,container,callback){\nvar _STAR_always_update_STAR_39345 = reagent.impl.util._STAR_always_update_STAR_;\nreagent.impl.util._STAR_always_update_STAR_ = true;\n\ntry{var G__39346 = (comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null));\nvar G__39347 = container;\nvar G__39348 = ((function (G__39346,G__39347,_STAR_always_update_STAR_39345){\nreturn (function (){\nvar _STAR_always_update_STAR_39349 = reagent.impl.util._STAR_always_update_STAR_;\nreagent.impl.util._STAR_always_update_STAR_ = false;\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reagent.dom.roots,cljs.core.assoc,container,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp,container], null));\n\nreagent.impl.batching.flush_after_render();\n\nif(!((callback == null))){\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\n} else {\nreturn null;\n}\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_39349;\n}});})(G__39346,G__39347,_STAR_always_update_STAR_39345))\n;\nreturn module$node_modules$react_dom$index.render(G__39346,G__39347,G__39348);\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_39345;\n}});\nreagent.dom.re_render_component = (function reagent$dom$re_render_component(comp,container){\nreturn reagent.dom.render_comp(comp,container,null);\n});\n/**\n * Render a Reagent component into the DOM. The first argument may be\n *   either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n * \n *   Optionally takes a callback that is called when the component is in place.\n * \n *   Returns the mounted component instance.\n */\nreagent.dom.render = (function reagent$dom$render(var_args){\nvar G__39351 = arguments.length;\nswitch (G__39351) {\ncase 2:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nreagent.dom.render.cljs$core$IFn$_invoke$arity$2 = (function (comp,container){\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3(comp,container,null);\n});\n\nreagent.dom.render.cljs$core$IFn$_invoke$arity$3 = (function (comp,container,callback){\nreagent.ratom.flush_BANG_();\n\nvar f = (function (){\nreturn reagent.impl.template.as_element(((cljs.core.fn_QMARK_(comp))?(comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)):comp));\n});\nreturn reagent.dom.render_comp(f,container,callback);\n});\n\nreagent.dom.render.cljs$lang$maxFixedArity = 3;\n\nreagent.dom.unmount_component_at_node = (function reagent$dom$unmount_component_at_node(container){\nreturn reagent.dom.unmount_comp(container);\n});\n/**\n * Returns the root DOM node of a mounted component.\n */\nreagent.dom.dom_node = (function reagent$dom$dom_node(this$){\nreturn module$node_modules$react_dom$index.findDOMNode(this$);\n});\nreagent.impl.template.find_dom_node = reagent.dom.dom_node;\n/**\n * Force re-rendering of all mounted Reagent components. This is\n *   probably only useful in a development environment, when you want to\n *   update components in response to some dynamic changes to code.\n * \n *   Note that force-update-all may not update root components. This\n *   happens if a component 'foo' is mounted with `(render [foo])` (since\n *   functions are passed by value, and not by reference, in\n *   ClojureScript). To get around this you'll have to introduce a layer\n *   of indirection, for example by using `(render [#'foo])` instead.\n */\nreagent.dom.force_update_all = (function reagent$dom$force_update_all(){\nreagent.ratom.flush_BANG_();\n\nvar seq__39353_39357 = cljs.core.seq(cljs.core.vals(cljs.core.deref(reagent.dom.roots)));\nvar chunk__39354_39358 = null;\nvar count__39355_39359 = (0);\nvar i__39356_39360 = (0);\nwhile(true){\nif((i__39356_39360 < count__39355_39359)){\nvar v_39361 = chunk__39354_39358.cljs$core$IIndexed$_nth$arity$2(null,i__39356_39360);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_39361);\n\nvar G__39362 = seq__39353_39357;\nvar G__39363 = chunk__39354_39358;\nvar G__39364 = count__39355_39359;\nvar G__39365 = (i__39356_39360 + (1));\nseq__39353_39357 = G__39362;\nchunk__39354_39358 = G__39363;\ncount__39355_39359 = G__39364;\ni__39356_39360 = G__39365;\ncontinue;\n} else {\nvar temp__5457__auto___39366 = cljs.core.seq(seq__39353_39357);\nif(temp__5457__auto___39366){\nvar seq__39353_39367__$1 = temp__5457__auto___39366;\nif(cljs.core.chunked_seq_QMARK_(seq__39353_39367__$1)){\nvar c__6057__auto___39368 = cljs.core.chunk_first(seq__39353_39367__$1);\nvar G__39369 = cljs.core.chunk_rest(seq__39353_39367__$1);\nvar G__39370 = c__6057__auto___39368;\nvar G__39371 = cljs.core.count(c__6057__auto___39368);\nvar G__39372 = (0);\nseq__39353_39357 = G__39369;\nchunk__39354_39358 = G__39370;\ncount__39355_39359 = G__39371;\ni__39356_39360 = G__39372;\ncontinue;\n} else {\nvar v_39373 = cljs.core.first(seq__39353_39367__$1);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_39373);\n\nvar G__39374 = cljs.core.next(seq__39353_39367__$1);\nvar G__39375 = null;\nvar G__39376 = (0);\nvar G__39377 = (0);\nseq__39353_39357 = G__39374;\nchunk__39354_39358 = G__39375;\ncount__39355_39359 = G__39376;\ni__39356_39360 = G__39377;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn \"Updated\";\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ "],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$dbg","~$reagent.debug","~$$","~$reagent.interop","~$$!","^@"],"~:excludes",["~#set",[]],"~:name","~$reagent.dom","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^J","^@","^@","~$reagent.ratom","^K","^<","^<","~$cljs.core","^L","~$goog","^M","~$reagent.impl.template","^N","~$reagent.impl.batching","^O","~$util","^J","~$tmpl","^N","~$ratom","^K","~$batch","^O","^?","^?","^;","^<"],"~:seen",["^C",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^?","^?","^@","^@","^L","^L","^K","^K","^R","^K"],"~:form",["~#list",["~$ns","^E",["^Y",["^U",["^;","~:as","^;"],["^J","^[","^P"],["^N","^[","^Q"],["^O","^[","^S"],["^K","^[","^R"],["^?","~:refer-macros",["^>"]],["^@","^10",["~$$","^A"]]]]]],"~:flags",["^ ","^U",["^C",[]]],"~:js-deps",["^ "],"~:deps",["^M","^L","^<","^J","^N","^O","^K","^?","^@"]],"^G","^E","~:resource-id",["~:shadow.build.classpath/resource","reagent/dom.cljs"],"~:compiled-at",1519925421116,"~:resource-name","reagent/dom.cljs","~:warnings",[],"~:source","(ns reagent.dom\n  (:require [react-dom :as react-dom]\n            [reagent.impl.util :as util]\n            [reagent.impl.template :as tmpl]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]\n            [reagent.debug :refer-macros [dbg]]\n            [reagent.interop :refer-macros [$ $!]]))\n\n(defonce ^:private imported nil)\n\n(defonce ^:private roots (atom {}))\n\n(defn- unmount-comp [container]\n  (swap! roots dissoc container)\n  (react-dom/unmountComponentAtNode container))\n\n(defn- render-comp [comp container callback]\n  (binding [util/*always-update* true]\n    (react-dom/render (comp) container\n      (fn []\n        (binding [util/*always-update* false]\n          (swap! roots assoc container [comp container])\n          (batch/flush-after-render)\n          (if (some? callback)\n            (callback)))))))\n\n(defn- re-render-component [comp container]\n  (render-comp comp container nil))\n\n(defn render\n  \"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.\"\n  ([comp container]\n   (render comp container nil))\n  ([comp container callback]\n   (ratom/flush!)\n   (let [f (fn []\n             (tmpl/as-element (if (fn? comp) (comp) comp)))]\n     (render-comp f container callback))))\n\n(defn unmount-component-at-node [container]\n  (unmount-comp container))\n\n(defn dom-node\n  \"Returns the root DOM node of a mounted component.\"\n  [this]\n  (react-dom/findDOMNode this))\n\n(set! tmpl/find-dom-node dom-node)\n\n(defn force-update-all\n  \"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.\"\n  []\n  (ratom/flush!)\n  (doseq [v (vals @roots)]\n    (apply re-render-component v))\n  \"Updated\")\n","~:reader-features",["^C",["~:cljs"]],"~:source-map",["^ ","~i9",["^ ","~i0",[["^ ","~:gcol",0,"~:gline",9],["^ ","^1=",3,"^1>",9],["^ ","^1=",0,"^1>",10],["^ ","^1=",0,"^1>",11],["^ ","^1=",0,"^1>",11],["^ ","^1=",23,"^1>",11]],"~i19",[["^ ","^1=",10,"^1>",9,"^D","reagent.dom/imported"],["^ ","^1=",0,"^1>",11,"^D","reagent.dom/imported"]]],"~i11",["^ ","~i0",[["^ ","^1=",0,"^1>",13],["^ ","^1=",3,"^1>",13],["^ ","^1=",0,"^1>",14],["^ ","^1=",0,"^1>",15],["^ ","^1=",0,"^1>",15]],"^1?",[["^ ","^1=",10,"^1>",13,"^D","reagent.dom/roots"],["^ ","^1=",0,"^1>",15,"^D","reagent.dom/roots"]],"~i25",[["^ ","^1=",20,"^1>",15],["^ ","^1=",65,"^1>",15]],"~i26",[["^ ","^1=",20,"^1>",15,"^D","cljs.core.atom.cljs$core$IFn$_invoke$arity$1"]]],"~i13",["^ ","~i0",[["^ ","^1=",0,"^1>",17],["^ ","^1=",27,"^1>",17],["^ ","^1=",0,"^1>",18]],"~i7",[["^ ","^1=",0,"^1>",17,"^D","reagent.dom/unmount-comp"]],"~i21",[["^ ","^1=",62,"^1>",17,"^D","container"]]],"~i14",["^ ","~i2",[["^ ","^1=",0,"^1>",18]],"~i3",[["^ ","^1=",0,"^1>",18,"^D","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3"]],"~i9",[["^ ","^1=",51,"^1>",18,"^D","reagent.dom/roots"]],"~i15",[["^ ","^1=",69,"^1>",18,"^D","cljs.core/dissoc"]],"~i22",[["^ ","^1=",86,"^1>",18,"^D","container"]]],"^1F",["^ ","~i2",[["^ ","^1=",0,"^1>",20]],"~i3",[["^ ","^1=",7,"^1>",20,"^D","js/module$node_modules$react_dom$index.unmountComponentAtNode"]],"~i36",[["^ ","^1=",66,"^1>",20,"^D","container"]]],"~i17",["^ ","~i0",[["^ ","^1=",0,"^1>",22],["^ ","^1=",26,"^1>",22],["^ ","^1=",0,"^1>",23]],"~i7",[["^ ","^1=",0,"^1>",22,"^D","reagent.dom/render-comp"]],"~i20",[["^ ","^1=",60,"^1>",22,"^D","comp"]],"^1A",[["^ ","^1=",65,"^1>",22,"^D","container"]],"~i35",[["^ ","^1=",75,"^1>",22,"^D","callback"]]],"~i18",["^ ","~i2",[["^ ","^1=",0,"^1>",23],["^ ","^1=",4,"^1>",23,"^D","*always-update*39345"],["^ ","^1=",0,"^1>",24],["^ ","^1=",0,"^1>",24],["^ ","^1=",46,"^1>",24],["^ ","^1=",0,"^1>",26],["^ ","^1=",4,"^1>",26],["^ ","^1=",10,"^1>",46],["^ ","^1=",10,"^1>",46],["^ ","^1=",56,"^1>",46,"^D","*always-update*39345"]],"~i12",[["^ ","^1=",37,"^1>",23,"^D","reagent.impl.util/*always-update*"],["^ ","^1=",0,"^1>",24,"^D","reagent.impl.util/*always-update*"],["^ ","^1=",10,"^1>",46,"^D","reagent.impl.util/*always-update*"]]],"^1?",["^ ","~i4",[["^ ","^1=",4,"^1>",26],["^ ","^1=",8,"^1>",26,"^D","G__39346"],["^ ","^1=",4,"^1>",27,"^D","G__39347"],["^ ","^1=",4,"^1>",28,"^D","G__39348"],["^ ","^1=",0,"^1>",45],["^ ","^1=",0,"^1>",45],["^ ","^1=",50,"^1>",45,"^D","G__39346"],["^ ","^1=",59,"^1>",45,"^D","G__39347"],["^ ","^1=",68,"^1>",45,"^D","G__39348"]],"~i5",[["^ ","^1=",7,"^1>",45,"^D","js/module$node_modules$react_dom$index.render"]],"^1G",[["^ ","^1=",19,"^1>",26]],"~i23",[["^ ","^1=",20,"^1>",26,"^D","comp"],["^ ","^1=",57,"^1>",26,"^D","comp"],["^ ","^1=",96,"^1>",26,"^D","comp"]],"~i29",[["^ ","^1=",15,"^1>",27,"^D","container"]]],"^1J",["^ ","~i6",[["^ ","^1=",15,"^1>",28],["^ ","^1=",0,"^1>",30]]],"^1D",["^ ","~i8",[["^ ","^1=",0,"^1>",30],["^ ","^1=",4,"^1>",30,"^D","*always-update*39349"],["^ ","^1=",0,"^1>",31],["^ ","^1=",0,"^1>",31],["^ ","^1=",46,"^1>",31],["^ ","^1=",0,"^1>",33],["^ ","^1=",4,"^1>",33],["^ ","^1=",10,"^1>",42],["^ ","^1=",10,"^1>",42],["^ ","^1=",56,"^1>",42,"^D","*always-update*39349"]],"^1L",[["^ ","^1=",37,"^1>",30,"^D","reagent.impl.util/*always-update*"],["^ ","^1=",0,"^1>",31,"^D","reagent.impl.util/*always-update*"],["^ ","^1=",10,"^1>",42,"^D","reagent.impl.util/*always-update*"]]],"^1G",["^ ","~i10",[["^ ","^1=",4,"^1>",33],["^ ","^1=",99,"^1>",33]],"^1@",[["^ ","^1=",4,"^1>",33,"^D","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4"]],"^1I",[["^ ","^1=",55,"^1>",33,"^D","reagent.dom/roots"]],"^1N",[["^ ","^1=",73,"^1>",33,"^D","cljs.core/assoc"]],"^1O",[["^ ","^1=",89,"^1>",33,"^D","container"]],"~i40",[["^ ","^1=",182,"^1>",33,"^D","comp"]],"~i45",[["^ ","^1=",187,"^1>",33,"^D","container"]]],"^1N",["^ ","^1P",[["^ ","^1=",0,"^1>",35]],"^1@",[["^ ","^1=",0,"^1>",35,"^D","reagent.impl.batching/flush-after-render"]]],"~i24",["^ ","^1P",[["^ ","^1=",0,"^1>",37],["^ ","^1=",0,"^1>",40]],"^1E",[["^ ","^1=",3,"^1>",37],["^ ","^1=",5,"^1>",37],["^ ","^1=",18,"^1>",37]],"^1D",[["^ ","^1=",6,"^1>",37,"^D","callback"]]],"^1A",["^ ","^1M",[["^ ","^1=",0,"^1>",38]],"^1C",[["^ ","^1=",8,"^1>",38,"^D","callback"],["^ ","^1=",49,"^1>",38,"^D","callback"],["^ ","^1=",92,"^1>",38,"^D","callback"]]],"~i27",["^ ","~i0",[["^ ","^1=",0,"^1>",48],["^ ","^1=",34,"^1>",48],["^ ","^1=",0,"^1>",49]],"~i7",[["^ ","^1=",0,"^1>",48,"^D","reagent.dom/re-render-component"]],"~i28",[["^ ","^1=",76,"^1>",48,"^D","comp"]],"~i33",[["^ ","^1=",81,"^1>",48,"^D","container"]]],"^1U",["^ ","~i2",[["^ ","^1=",0,"^1>",49],["^ ","^1=",46,"^1>",49]],"~i3",[["^ ","^1=",7,"^1>",49,"^D","reagent.dom/render-comp"]],"^1F",[["^ ","^1=",31,"^1>",49,"^D","comp"]],"^1J",[["^ ","^1=",36,"^1>",49,"^D","container"]]],"~i30",["^ ","~i0",[["^ ","^1=",0,"^1>",51],["^ ","^1=",0,"^1>",51],["^ ","^1=",21,"^1>",59],["^ ","^1=",50,"^1>",59,"^D","var_args"],["^ ","^1=",0,"^1>",60],["^ ","^1=",0,"^1>",60],["^ ","^1=",4,"^1>",60,"^D","G__39351"],["^ ","^1=",15,"^1>",60],["^ ","^1=",15,"^1>",60],["^ ","^1=",0,"^1>",61],["^ ","^1=",0,"^1>",61],["^ ","^1=",8,"^1>",61,"^D","G__39351"],["^ ","^1=",5,"^1>",62],["^ ","^1=",0,"^1>",63],["^ ","^1=",7,"^1>",63,"^D","reagent.dom/render"],["^ ","^1=",56,"^1>",63],["^ ","^1=",57,"^1>",63],["^ ","^1=",67,"^1>",63],["^ ","^1=",73,"^1>",63],["^ ","^1=",74,"^1>",63],["^ ","^1=",84,"^1>",63],["^ ","^1=",5,"^1>",66],["^ ","^1=",0,"^1>",67],["^ ","^1=",7,"^1>",67,"^D","reagent.dom/render"],["^ ","^1=",56,"^1>",67],["^ ","^1=",57,"^1>",67],["^ ","^1=",67,"^1>",67],["^ ","^1=",73,"^1>",67],["^ ","^1=",74,"^1>",67],["^ ","^1=",84,"^1>",67],["^ ","^1=",90,"^1>",67],["^ ","^1=",91,"^1>",67],["^ ","^1=",101,"^1>",67],["^ ","^1=",0,"^1>",71],["^ ","^1=",6,"^1>",71],["^ ","^1=",11,"^1>",71,"^D","js/Error"],["^ ","^1=",17,"^1>",71],["^ ","^1=",18,"^1>",71],["^ ","^1=",80,"^1>",71],["^ ","^1=",80,"^1>",71],["^ ","^1=",0,"^1>",76],["^ ","^1=",0,"^1>",76],["^ ","^1=",51,"^1>",76],["^ ","^1=",0,"^1>",77],["^ ","^1=",0,"^1>",80],["^ ","^1=",0,"^1>",80],["^ ","^1=",51,"^1>",80],["^ ","^1=",0,"^1>",81],["^ ","^1=",0,"^1>",89],["^ ","^1=",0,"^1>",89],["^ ","^1=",45,"^1>",89],["^ ","^1=",0,"^1>",91]],"~i6",[["^ ","^1=",0,"^1>",59,"^D","reagent.dom/render"],["^ ","^1=",0,"^1>",76,"^D","reagent.dom/render"],["^ ","^1=",0,"^1>",80,"^D","reagent.dom/render"],["^ ","^1=",0,"^1>",89,"^D","reagent.dom/render"]]],"~i37",["^ ","~i4",[["^ ","^1=",62,"^1>",76,"^D","comp"]],"~i9",[["^ ","^1=",67,"^1>",76,"^D","container"]]],"~i38",["^ ","~i3",[["^ ","^1=",0,"^1>",77],["^ ","^1=",71,"^1>",77]],"~i4",[["^ ","^1=",7,"^1>",77,"^D","reagent.dom.render.cljs$core$IFn$_invoke$arity$3"]],"^1@",[["^ ","^1=",56,"^1>",77,"^D","comp"]],"~i16",[["^ ","^1=",61,"^1>",77,"^D","container"]]],"~i39",["^ ","~i4",[["^ ","^1=",62,"^1>",80,"^D","comp"]],"~i9",[["^ ","^1=",67,"^1>",80,"^D","container"]],"^1?",[["^ ","^1=",77,"^1>",80,"^D","callback"]]],"^1Q",["^ ","~i3",[["^ ","^1=",0,"^1>",81]],"~i4",[["^ ","^1=",0,"^1>",81,"^D","reagent.ratom/flush!"]]],"~i41",["^ ","~i3",[["^ ","^1=",0,"^1>",83],["^ ","^1=",0,"^1>",86]],"~i9",[["^ ","^1=",4,"^1>",83,"^D","f"]],"^1@",[["^ ","^1=",8,"^1>",83],["^ ","^1=",0,"^1>",84]]],"~i42",["^ ","^1C",[["^ ","^1=",0,"^1>",84]],"^1E",[["^ ","^1=",7,"^1>",84,"^D","reagent.impl.template/as-element"]],"^1W",[["^ ","^1=",40,"^1>",84]],"~i34",[["^ ","^1=",42,"^1>",84]],"^1K",[["^ ","^1=",42,"^1>",84,"^D","cljs.core/fn?"]],"^1[",[["^ ","^1=",62,"^1>",84,"^D","comp"]],"^1R",[["^ ","^1=",69,"^1>",84]],"~i46",[["^ ","^1=",70,"^1>",84,"^D","comp"],["^ ","^1=",107,"^1>",84,"^D","comp"],["^ ","^1=",146,"^1>",84,"^D","comp"]],"~i52",[["^ ","^1=",163,"^1>",84,"^D","comp"]]],"~i43",["^ ","~i5",[["^ ","^1=",0,"^1>",86]],"~i6",[["^ ","^1=",7,"^1>",86,"^D","reagent.dom/render-comp"]],"^1L",[["^ ","^1=",31,"^1>",86,"^D","f"]],"^1J",[["^ ","^1=",33,"^1>",86,"^D","container"]],"^1W",[["^ ","^1=",43,"^1>",86,"^D","callback"]]],"^1R",["^ ","~i0",[["^ ","^1=",0,"^1>",91],["^ ","^1=",40,"^1>",91],["^ ","^1=",0,"^1>",92]],"~i6",[["^ ","^1=",0,"^1>",91,"^D","reagent.dom/unmount-component-at-node"]],"^1V",[["^ ","^1=",88,"^1>",91,"^D","container"]]],"^23",["^ ","~i2",[["^ ","^1=",0,"^1>",92]],"~i3",[["^ ","^1=",7,"^1>",92,"^D","reagent.dom/unmount-comp"]],"^1Z",[["^ ","^1=",32,"^1>",92,"^D","container"]]],"~i48",["^ ","~i0",[["^ ","^1=",0,"^1>",94],["^ ","^1=",23,"^1>",97],["^ ","^1=",0,"^1>",98]],"~i6",[["^ ","^1=",0,"^1>",97,"^D","reagent.dom/dom-node"]]],"~i50",["^ ","~i3",[["^ ","^1=",54,"^1>",97,"^D","this"]]],"~i51",["^ ","~i2",[["^ ","^1=",0,"^1>",98]],"~i3",[["^ ","^1=",7,"^1>",98,"^D","js/module$node_modules$react_dom$index.findDOMNode"]],"^1A",[["^ ","^1=",55,"^1>",98,"^D","this"]]],"~i53",["^ ","~i0",[["^ ","^1=",0,"^1>",100]],"~i6",[["^ ","^1=",0,"^1>",100,"^D","reagent.impl.template/find-dom-node"]],"^1A",[["^ ","^1=",38,"^1>",100,"^D","reagent.dom/dom-node"]]],"~i55",["^ ","~i0",[["^ ","^1=",0,"^1>",101],["^ ","^1=",31,"^1>",112],["^ ","^1=",0,"^1>",113],["^ ","^1=",0,"^1>",168]],"~i6",[["^ ","^1=",0,"^1>",112,"^D","reagent.dom/force-update-all"]]],"~i66",["^ ","~i2",[["^ ","^1=",0,"^1>",113]],"~i3",[["^ ","^1=",0,"^1>",113,"^D","reagent.ratom/flush!"]]],"~i67",["^ ","~i2",[["^ ","^1=",0,"^1>",115],["^ ","^1=",4,"^1>",115,"^D","seq__39353"],["^ ","^1=",23,"^1>",115],["^ ","^1=",23,"^1>",115,"^D","cljs.core/seq"],["^ ","^1=",4,"^1>",116,"^D","chunk__39354"],["^ ","^1=",25,"^1>",116],["^ ","^1=",4,"^1>",117,"^D","count__39355"],["^ ","^1=",25,"^1>",117],["^ ","^1=",4,"^1>",118,"^D","i__39356"],["^ ","^1=",21,"^1>",118],["^ ","^1=",0,"^1>",120],["^ ","^1=",0,"^1>",120],["^ ","^1=",3,"^1>",120],["^ ","^1=",3,"^1>",120],["^ ","^1=",4,"^1>",120,"^D","i__39356"],["^ ","^1=",21,"^1>",120,"^D","count__39355"],["^ ","^1=",0,"^1>",121],["^ ","^1=",14,"^1>",121],["^ ","^1=",14,"^1>",121,"^D","chunk__39354"],["^ ","^1=",70,"^1>",121,"^D","i__39356"],["^ ","^1=",0,"^1>",122],["^ ","^1=",0,"^1>",122],["^ ","^1=",0,"^1>",124],["^ ","^1=",15,"^1>",124,"^D","seq__39353"],["^ ","^1=",15,"^1>",125,"^D","chunk__39354"],["^ ","^1=",15,"^1>",126,"^D","count__39355"],["^ ","^1=",15,"^1>",127],["^ ","^1=",16,"^1>",127,"^D","i__39356"],["^ ","^1=",33,"^1>",127],["^ ","^1=",0,"^1>",134],["^ ","^1=",4,"^1>",134,"^D","temp__5457__auto__"],["^ ","^1=",31,"^1>",134],["^ ","^1=",31,"^1>",134,"^D","cljs.core/seq"],["^ ","^1=",45,"^1>",134,"^D","seq__39353"],["^ ","^1=",0,"^1>",135],["^ ","^1=",0,"^1>",135],["^ ","^1=",3,"^1>",135,"^D","temp__5457__auto__"],["^ ","^1=",0,"^1>",136],["^ ","^1=",0,"^1>",136],["^ ","^1=",4,"^1>",136,"^D","seq__39353"],["^ ","^1=",27,"^1>",136,"^D","temp__5457__auto__"],["^ ","^1=",0,"^1>",137],["^ ","^1=",0,"^1>",137],["^ ","^1=",3,"^1>",137],["^ ","^1=",3,"^1>",137,"^D","cljs.core/chunked-seq?"],["^ ","^1=",32,"^1>",137,"^D","seq__39353"],["^ ","^1=",0,"^1>",138],["^ ","^1=",4,"^1>",138,"^D","c__6057__auto__"],["^ ","^1=",28,"^1>",138],["^ ","^1=",28,"^1>",138,"^D","cljs.core/chunk-first"],["^ ","^1=",50,"^1>",138,"^D","seq__39353"],["^ ","^1=",0,"^1>",139],["^ ","^1=",0,"^1>",139],["^ ","^1=",15,"^1>",139],["^ ","^1=",15,"^1>",139,"^D","cljs.core/chunk-rest"],["^ ","^1=",36,"^1>",139,"^D","seq__39353"],["^ ","^1=",15,"^1>",140,"^D","c__6057__auto__"],["^ ","^1=",15,"^1>",141],["^ ","^1=",15,"^1>",141,"^D","cljs.core/count"],["^ ","^1=",31,"^1>",141,"^D","c__6057__auto__"],["^ ","^1=",15,"^1>",142],["^ ","^1=",0,"^1>",149],["^ ","^1=",14,"^1>",149],["^ ","^1=",14,"^1>",149,"^D","cljs.core/first"],["^ ","^1=",30,"^1>",149,"^D","seq__39353"],["^ ","^1=",0,"^1>",150],["^ ","^1=",0,"^1>",150],["^ ","^1=",0,"^1>",152],["^ ","^1=",15,"^1>",152],["^ ","^1=",15,"^1>",152,"^D","cljs.core/next"],["^ ","^1=",30,"^1>",152,"^D","seq__39353"],["^ ","^1=",15,"^1>",153],["^ ","^1=",15,"^1>",154],["^ ","^1=",15,"^1>",155],["^ ","^1=",0,"^1>",163]],"^1P",[["^ ","^1=",4,"^1>",121,"^D","v"],["^ ","^1=",4,"^1>",149,"^D","v"]],"^1M",[["^ ","^1=",37,"^1>",115],["^ ","^1=",52,"^1>",115],["^ ","^1=",52,"^1>",115,"^D","cljs.core/deref"]],"^1C",[["^ ","^1=",37,"^1>",115,"^D","cljs.core/vals"]],"^1?",[["^ ","^1=",68,"^1>",115,"^D","reagent.dom/roots"]]],"~i68",["^ ","~i4",[["^ ","^1=",0,"^1>",122],["^ ","^1=",0,"^1>",150]],"~i5",[["^ ","^1=",0,"^1>",122,"^D","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],["^ ","^1=",0,"^1>",150,"^D","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]],"^1@",[["^ ","^1=",46,"^1>",122,"^D","reagent.dom/re-render-component"],["^ ","^1=",46,"^1>",150,"^D","reagent.dom/re-render-component"]],"~i31",[["^ ","^1=",78,"^1>",122,"^D","v"],["^ ","^1=",78,"^1>",150,"^D","v"]]]],"~:cljc",false],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1519924824000,1519924824000,1511904410000],["^15","reagent/impl/batching.cljs"],1519924823000,["^2B","node_modules/fbjs/lib/camelize.js"],[1519924824000,1519924824000,1506381453000],["~:macro","^L"],1507131355000,["^15","goog/math/math.js"],1506418332000,["^2C","^?"],1519924823000,["^15","goog/array/array.js"],1506418332000,["^2B","node_modules/prop-types/checkPropTypes.js"],[1519924824000,1519924824000,1519255688000],["^15","reagent/impl/util.cljs"],1519924823000,["^2B","node_modules/fbjs/lib/emptyFunction.js"],[1519924824000,1519924824000,1506381453000],["^15","goog/debug/error.js"],1506418332000,["^2B","node_modules/fbjs/lib/emptyObject.js"],[1519924824000,1519924824000,1506381454000],["^15","goog/dom/nodetype.js"],1506418332000,["^2B","node_modules/fbjs/lib/shallowEqual.js"],[1519924824000,1519924824000,1506381454000],["^15","reagent/ratom.cljs"],1519924823000,["^2B","node_modules/fbjs/lib/hyphenate.js"],[1519924824000,1519924824000,1506381454000],["^2B","node_modules/create-react-class/factory.js"],[1519924824000,1519924824000,1517346959000],["^2B","node_modules/react/index.js"],[1519924824000,1519924824000,1511904400000],["^15","shadow/js.js"],1519924824000,["^15","goog/object/object.js"],1506418332000,["^15","reagent/impl/template.cljs"],1519924823000,["^2B","node_modules/react-dom/cjs/react-dom.production.min.js"],[1519924824000,1519924824000,1511904439000],"~:SHADOW-TIMESTAMP",1519924824000,["^2B","node_modules/react/cjs/react.development.js"],[1519924824000,1519924824000,1511904402000],["^2C","^K"],1519924823000,["^2B","node_modules/fbjs/lib/isNode.js"],[1519924824000,1519924824000,1506381456000],["^15","goog/math/long.js"],1506418332000,["^2C","^@"],1519924823000,["^2B","node_modules/fbjs/lib/warning.js"],[1519924824000,1519924824000,1506381455000],["^15","goog/functions/functions.js"],1506418332000,["^15","reagent/impl/component.cljs"],1519924823000,["^15","clojure/walk.cljs"],1507131355000,["^15","goog/structs/map.js"],1506418332000,["^15","goog/asserts/asserts.js"],1506418332000,["^15","goog/uri/uri.js"],1506418332000,["^2B","node_modules/object-assign/index.js"],[1519924824000,1519924824000,1484580833000],["^2B","node_modules/fbjs/lib/containsNode.js"],[1519924824000,1519924824000,1506381456000],["^2B","node_modules/fbjs/lib/hyphenateStyleName.js"],[1519924824000,1519924824000,1506381454000],["^15","goog/base.js"],1506418332000,["^15","goog/structs/structs.js"],1506418332000,["^15","clojure/string.cljs"],1507131355000,["^2B","node_modules/fbjs/lib/ExecutionEnvironment.js"],[1519924824000,1519924824000,1506381453000],["^2B","node_modules/create-react-class/index.js"],[1519924824000,1519924824000,1517346956000],["^2B","node_modules/fbjs/lib/EventListener.js"],[1519924824000,1519924824000,1506381456000],["^2B","node_modules/react/cjs/react.production.min.js"],[1519924824000,1519924824000,1511904403000],["^15","goog/string/string.js"],1506418332000,["^15","goog/reflect/reflect.js"],1506418332000,["^15","goog/string/stringbuffer.js"],1506418332000,["^15","goog/iter/iter.js"],1506418332000,["^2B","node_modules/fbjs/lib/getActiveElement.js"],[1519924824000,1519924824000,1506381456000],["^15","reagent/dom.cljs"],1519924823000,["^2B","node_modules/fbjs/lib/camelizeStyleName.js"],[1519924824000,1519924824000,1506381453000],["^2B","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1519924824000,1519924824000,1519255688000],["^15","reagent/interop.cljs"],1519924823000,["^15","cljs/core.cljs"],1507131355000,["^15","reagent/debug.cljs"],1519924823000,["^15","goog/math/integer.js"],1506418332000,["^2B","node_modules/react-dom/cjs/react-dom.development.js"],[1519924824000,1519924824000,1511904427000],["^15","clojure/set.cljs"],1507131355000,["^15","goog/uri/utils.js"],1506418332000,["^2B","node_modules/fbjs/lib/isTextNode.js"],[1519924824000,1519924824000,1506381456000],["^2B","node_modules/fbjs/lib/focusNode.js"],[1519924824000,1519924824000,1506381456000],["^2B","node_modules/fbjs/lib/invariant.js"],[1519924824000,1519924824000,1506381455000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ "],"^6",["^ ","^7","^8","^9","^:","^;","^<"],"^=",["^ ","^>","^?","~$$","^@","^A","^@"],"^B",["^C",[]],"~:shadow/js-access-properties",["^C",["findDOMNode","render","unmountComponentAtNode"]],"^D","^E","^H",null,"^I",["^ ","^J","^J","^@","^@","^K","^K","^<","^<","^L","^L","^M","^M","^N","^N","^O","^O","^P","^J","^Q","^N","^R","^K","^S","^O","^?","^?","^;","^<"],"^T",["^C",["^U"]],"~:shadow/js-access-global",["^C",["Error"]],"^V",null,"~:defs",["^ ","~$imported",["^ ","^D","~$reagent.dom/imported","~:file","reagent/dom.cljs","~:line",10,"~:column",1,"~:end-line",10,"~:end-column",28,"~:private",true,"^5",["^ ","^2K","reagent/dom.cljs","^2L",10,"^2M",20,"^2N",10,"^2O",28,"^2P",true],"~:tag","~$clj-nil"],"~$roots",["^ ","^D","~$reagent.dom/roots","^2K","reagent/dom.cljs","^2L",12,"^2M",1,"^2N",12,"^2O",25,"^2P",true,"^5",["^ ","^2K","reagent/dom.cljs","^2L",12,"^2M",20,"^2N",12,"^2O",25,"^2P",true],"^2Q","~$any"],"~$unmount-comp",["^ ","~:protocol-inline",null,"^5",["^ ","^2K","reagent/dom.cljs","^2L",14,"^2M",8,"^2N",14,"^2O",20,"^2P",true,"~:arglists",["^Y",["~$quote",["^Y",[["~$container"]]]]]],"^2P",true,"^D","~$reagent.dom/unmount-comp","~:variadic",false,"^2K","reagent/dom.cljs","^2O",20,"~:method-params",["^Y",[["^2Z"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^2M",1,"^2L",14,"^2N",14,"~:max-fixed-arity",1,"~:fn-var",true,"^2X",["^Y",["^2Y",["^Y",[["^2Z"]]]]]],"~$render-comp",["^ ","^2W",null,"^5",["^ ","^2K","reagent/dom.cljs","^2L",18,"^2M",8,"^2N",18,"^2O",19,"^2P",true,"^2X",["^Y",["^2Y",["^Y",[["~$comp","^2Z","~$callback"]]]]]],"^2P",true,"^D","~$reagent.dom/render-comp","^30",false,"^2K","reagent/dom.cljs","^2O",19,"^31",["^Y",[["^37","^2Z","^38"]]],"^32",null,"^33",["^Y",[null,null]],"^2M",1,"^2L",18,"^2N",18,"^34",3,"^35",true,"^2X",["^Y",["^2Y",["^Y",[["^37","^2Z","^38"]]]]]],"~$re-render-component",["^ ","^2W",null,"^5",["^ ","^2K","reagent/dom.cljs","^2L",28,"^2M",8,"^2N",28,"^2O",27,"^2P",true,"^2X",["^Y",["^2Y",["^Y",[["^37","^2Z"]]]]]],"^2P",true,"^D","~$reagent.dom/re-render-component","^30",false,"^2K","reagent/dom.cljs","^2O",27,"^31",["^Y",[["^37","^2Z"]]],"^32",null,"^33",["^Y",[null,null]],"^2M",1,"^2L",28,"^2N",28,"^34",2,"^35",true,"^2X",["^Y",["^2Y",["^Y",[["^37","^2Z"]]]]]],"~$render",["^ ","^2W",null,"^5",["^ ","^2K","reagent/dom.cljs","^2L",31,"^2M",7,"^2N",31,"^2O",13,"^2X",["^Y",["^2Y",["^Y",[["^37","^2Z"],["^37","^2Z","^38"]]]]],"~:doc","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.","~:top-fn",["^ ","^30",false,"^34",3,"^31",["^Y",[["^37","^2Z"],["^37","^2Z","^38"]]],"^2X",["^Y",[["^37","^2Z"],["^37","^2Z","^38"]]],"^33",["^Y",[null,null]]]],"^D","~$reagent.dom/render","^30",false,"^2K","reagent/dom.cljs","^2O",13,"^3>",["^ ","^30",false,"^34",3,"^31",["^Y",[["^37","^2Z"],["^37","^2Z","^38"]]],"^2X",["^Y",[["^37","^2Z"],["^37","^2Z","^38"]]],"^33",["^Y",[null,null]]],"^31",["^Y",[["^37","^2Z"],["^37","^2Z","^38"]]],"^32",null,"^33",["^Y",[null,null]],"^2M",1,"^2L",31,"^2N",31,"^34",3,"^35",true,"^2X",["^Y",[["^37","^2Z"],["^37","^2Z","^38"]]],"^3=","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element. The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance."],"~$unmount-component-at-node",["^ ","^2W",null,"^5",["^ ","^2K","reagent/dom.cljs","^2L",46,"^2M",7,"^2N",46,"^2O",32,"^2X",["^Y",["^2Y",["^Y",[["^2Z"]]]]]],"^D","~$reagent.dom/unmount-component-at-node","^30",false,"^2K","reagent/dom.cljs","^2O",32,"^31",["^Y",[["^2Z"]]],"^32",null,"^33",["^Y",[null,null]],"^2M",1,"^2L",46,"^2N",46,"^34",1,"^35",true,"^2X",["^Y",["^2Y",["^Y",[["^2Z"]]]]]],"~$dom-node",["^ ","^2W",null,"^5",["^ ","^2K","reagent/dom.cljs","^2L",49,"^2M",7,"^2N",49,"^2O",15,"^2X",["^Y",["^2Y",["^Y",[["~$this"]]]]],"^3=","Returns the root DOM node of a mounted component."],"^D","~$reagent.dom/dom-node","^30",false,"^2K","reagent/dom.cljs","^2O",15,"^31",["^Y",[["^3C"]]],"^32",null,"^33",["^Y",[null,null]],"^2M",1,"^2L",49,"^2N",49,"^34",1,"^35",true,"^2X",["^Y",["^2Y",["^Y",[["^3C"]]]]],"^3=","Returns the root DOM node of a mounted component."],"~$force-update-all",["^ ","^2W",null,"^5",["^ ","^2K","reagent/dom.cljs","^2L",56,"^2M",7,"^2N",56,"^2O",23,"^2X",["^Y",["^2Y",["^Y",[[]]]]],"^3=","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"^D","~$reagent.dom/force-update-all","^30",false,"^2K","reagent/dom.cljs","^2O",23,"^31",["^Y",[[]]],"^32",null,"^33",["^Y",[null,null]],"^2M",1,"^2L",56,"^2N",56,"^34",0,"^35",true,"^2X",["^Y",["^2Y",["^Y",[[]]]]],"^3=","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."]],"^W",["^ ","^?","^?","^@","^@","^L","^L","^K","^K","^R","^K"],"^11",["^ ","^U",["^C",[]]],"^12",["^ "],"^13",["^M","^L","^<","^J","^N","^O","^K","^?","^@"]],"^G","^E","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^2A",[["^3I","~:static-fns"],true,["^3I","~:elide-asserts"],false,["^3I","~:optimize-constants"],null,["^3I","~:emit-constants"],null,["^3I","~:infer-externs"],true,["^3I","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3I","~:fn-invoke-direct"],null,["^3I","^1<"],"/dev/null"]]]