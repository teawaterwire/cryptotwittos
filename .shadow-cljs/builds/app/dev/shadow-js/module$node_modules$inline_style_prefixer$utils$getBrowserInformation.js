["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/inline-style-prefixer/utils/getBrowserInformation.js"],"~:js","shadow$provide.module$node_modules$inline_style_prefixer$utils$getBrowserInformation=function(a,c,b,f,e){function d(a){if(a.firefox)return\"firefox\";if(a.mobile||a.tablet){if(a.ios)return\"ios_saf\";if(a.android)return\"android\";if(a.opera)return\"op_mini\"}for(var b in k)if(a.hasOwnProperty(b))return k[b]}Object.defineProperty(e,\"__esModule\",{value:!0});e.default=function(a){var b=n.default._detect(a);b.yandexbrowser&&(b=n.default._detect(a.replace(/YaBrowser\\/[0-9.]*/,\"\")));for(var c in u)if(b.hasOwnProperty(c)){a=\nu[c];b.jsPrefix=a;b.cssPrefix=\"-\"+a.toLowerCase()+\"-\";break}b.browserName=d(b);b.browserVersion=b.version?parseFloat(b.version):parseInt(parseFloat(b.osversion),10);b.osVersion=parseFloat(b.osversion);\"ios_saf\"===b.browserName&&b.browserVersion>b.osVersion&&(b.browserVersion=b.osVersion);\"android\"===b.browserName&&b.chrome&&37<b.browserVersion&&(b.browserName=\"and_chr\");\"android\"===b.browserName&&5>b.osVersion&&(b.browserVersion=b.osVersion);\"android\"===b.browserName&&b.samsungBrowser&&(b.browserName=\n\"and_chr\",b.browserVersion=44);return b};var n=(a=b(\"module$node_modules$bowser$src$bowser\"))&&a.__esModule?a:{default:a},u={chrome:\"Webkit\",safari:\"Webkit\",ios:\"Webkit\",android:\"Webkit\",phantom:\"Webkit\",opera:\"Webkit\",webos:\"Webkit\",blackberry:\"Webkit\",bada:\"Webkit\",tizen:\"Webkit\",chromium:\"Webkit\",vivaldi:\"Webkit\",firefox:\"Moz\",seamoney:\"Moz\",sailfish:\"Moz\",msie:\"ms\",msedge:\"ms\"},k={chrome:\"chrome\",chromium:\"chrome\",safari:\"safari\",firfox:\"firefox\",msedge:\"edge\",opera:\"opera\",vivaldi:\"opera\",msie:\"ie\"};\nf.exports=e[\"default\"]}","~:source","shadow$provide[\"module$node_modules$inline_style_prefixer$utils$getBrowserInformation\"] = function(global,process,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getBrowserInformation;\n\nvar _bowser = require('bowser');\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixByBrowser = {\n  chrome: 'Webkit',\n  safari: 'Webkit',\n  ios: 'Webkit',\n  android: 'Webkit',\n  phantom: 'Webkit',\n  opera: 'Webkit',\n  webos: 'Webkit',\n  blackberry: 'Webkit',\n  bada: 'Webkit',\n  tizen: 'Webkit',\n  chromium: 'Webkit',\n  vivaldi: 'Webkit',\n  firefox: 'Moz',\n  seamoney: 'Moz',\n  sailfish: 'Moz',\n  msie: 'ms',\n  msedge: 'ms'\n};\n\n\nvar browserByCanIuseAlias = {\n  chrome: 'chrome',\n  chromium: 'chrome',\n  safari: 'safari',\n  firfox: 'firefox',\n  msedge: 'edge',\n  opera: 'opera',\n  vivaldi: 'opera',\n  msie: 'ie'\n};\n\nfunction getBrowserName(browserInfo) {\n  if (browserInfo.firefox) {\n    return 'firefox';\n  }\n\n  if (browserInfo.mobile || browserInfo.tablet) {\n    if (browserInfo.ios) {\n      return 'ios_saf';\n    } else if (browserInfo.android) {\n      return 'android';\n    } else if (browserInfo.opera) {\n      return 'op_mini';\n    }\n  }\n\n  for (var browser in browserByCanIuseAlias) {\n    if (browserInfo.hasOwnProperty(browser)) {\n      return browserByCanIuseAlias[browser];\n    }\n  }\n}\n\n/**\n * Uses bowser to get default browser browserInformation such as version and name\n * Evaluates bowser browserInfo and adds vendorPrefix browserInformation\n * @param {string} userAgent - userAgent that gets evaluated\n */\nfunction getBrowserInformation(userAgent) {\n  var browserInfo = _bowser2.default._detect(userAgent);\n\n  if (browserInfo.yandexbrowser) {\n    browserInfo = _bowser2.default._detect(userAgent.replace(/YaBrowser\\/[0-9.]*/, ''));\n  }\n\n  for (var browser in prefixByBrowser) {\n    if (browserInfo.hasOwnProperty(browser)) {\n      var prefix = prefixByBrowser[browser];\n\n      browserInfo.jsPrefix = prefix;\n      browserInfo.cssPrefix = '-' + prefix.toLowerCase() + '-';\n      break;\n    }\n  }\n\n  browserInfo.browserName = getBrowserName(browserInfo);\n\n  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\n  if (browserInfo.version) {\n    browserInfo.browserVersion = parseFloat(browserInfo.version);\n  } else {\n    browserInfo.browserVersion = parseInt(parseFloat(browserInfo.osversion), 10);\n  }\n\n  browserInfo.osVersion = parseFloat(browserInfo.osversion);\n\n  // iOS forces all browsers to use Safari under the hood\n  // as the Safari version seems to match the iOS version\n  // we just explicitely use the osversion instead\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\n  if (browserInfo.browserName === 'ios_saf' && browserInfo.browserVersion > browserInfo.osVersion) {\n    browserInfo.browserVersion = browserInfo.osVersion;\n  }\n\n  // seperate native android chrome\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\n  if (browserInfo.browserName === 'android' && browserInfo.chrome && browserInfo.browserVersion > 37) {\n    browserInfo.browserName = 'and_chr';\n  }\n\n  // For android < 4.4 we want to check the osversion\n  // not the chrome version, see issue #26\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\n  if (browserInfo.browserName === 'android' && browserInfo.osVersion < 5) {\n    browserInfo.browserVersion = browserInfo.osVersion;\n  }\n\n  // Samsung browser are basically build on Chrome > 44\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/102\n  if (browserInfo.browserName === 'android' && browserInfo.samsungBrowser) {\n    browserInfo.browserName = 'and_chr';\n    browserInfo.browserVersion = 44;\n  }\n\n  return browserInfo;\n}\nmodule.exports = exports['default'];\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$bowser$src$bowser"]],"~:properties",["^5",["firfox","blackberry","opera","osVersion","webos","__esModule","jsPrefix","msie","phantom","value","firefox","sailfish","chromium","safari","bada","tizen","vivaldi","cssPrefix","msedge","seamoney","chrome","browserName","ios","browserVersion","default","android"]],"~:compiled-at",1519979268758,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$inline_style_prefixer$utils$getBrowserInformation.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/inline-style-prefixer/utils/getBrowserInformation.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$inline_style_prefixer$utils$getBrowserInformation\\\"] = function(global,process,require,module,exports) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = getBrowserInformation;\\n\\nvar _bowser = require('bowser');\\n\\nvar _bowser2 = _interopRequireDefault(_bowser);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar prefixByBrowser = {\\n  chrome: 'Webkit',\\n  safari: 'Webkit',\\n  ios: 'Webkit',\\n  android: 'Webkit',\\n  phantom: 'Webkit',\\n  opera: 'Webkit',\\n  webos: 'Webkit',\\n  blackberry: 'Webkit',\\n  bada: 'Webkit',\\n  tizen: 'Webkit',\\n  chromium: 'Webkit',\\n  vivaldi: 'Webkit',\\n  firefox: 'Moz',\\n  seamoney: 'Moz',\\n  sailfish: 'Moz',\\n  msie: 'ms',\\n  msedge: 'ms'\\n};\\n\\n\\nvar browserByCanIuseAlias = {\\n  chrome: 'chrome',\\n  chromium: 'chrome',\\n  safari: 'safari',\\n  firfox: 'firefox',\\n  msedge: 'edge',\\n  opera: 'opera',\\n  vivaldi: 'opera',\\n  msie: 'ie'\\n};\\n\\nfunction getBrowserName(browserInfo) {\\n  if (browserInfo.firefox) {\\n    return 'firefox';\\n  }\\n\\n  if (browserInfo.mobile || browserInfo.tablet) {\\n    if (browserInfo.ios) {\\n      return 'ios_saf';\\n    } else if (browserInfo.android) {\\n      return 'android';\\n    } else if (browserInfo.opera) {\\n      return 'op_mini';\\n    }\\n  }\\n\\n  for (var browser in browserByCanIuseAlias) {\\n    if (browserInfo.hasOwnProperty(browser)) {\\n      return browserByCanIuseAlias[browser];\\n    }\\n  }\\n}\\n\\n/**\\n * Uses bowser to get default browser browserInformation such as version and name\\n * Evaluates bowser browserInfo and adds vendorPrefix browserInformation\\n * @param {string} userAgent - userAgent that gets evaluated\\n */\\nfunction getBrowserInformation(userAgent) {\\n  var browserInfo = _bowser2.default._detect(userAgent);\\n\\n  if (browserInfo.yandexbrowser) {\\n    browserInfo = _bowser2.default._detect(userAgent.replace(/YaBrowser\\\\/[0-9.]*/, ''));\\n  }\\n\\n  for (var browser in prefixByBrowser) {\\n    if (browserInfo.hasOwnProperty(browser)) {\\n      var prefix = prefixByBrowser[browser];\\n\\n      browserInfo.jsPrefix = prefix;\\n      browserInfo.cssPrefix = '-' + prefix.toLowerCase() + '-';\\n      break;\\n    }\\n  }\\n\\n  browserInfo.browserName = getBrowserName(browserInfo);\\n\\n  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\\n  if (browserInfo.version) {\\n    browserInfo.browserVersion = parseFloat(browserInfo.version);\\n  } else {\\n    browserInfo.browserVersion = parseInt(parseFloat(browserInfo.osversion), 10);\\n  }\\n\\n  browserInfo.osVersion = parseFloat(browserInfo.osversion);\\n\\n  // iOS forces all browsers to use Safari under the hood\\n  // as the Safari version seems to match the iOS version\\n  // we just explicitely use the osversion instead\\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\\n  if (browserInfo.browserName === 'ios_saf' && browserInfo.browserVersion > browserInfo.osVersion) {\\n    browserInfo.browserVersion = browserInfo.osVersion;\\n  }\\n\\n  // seperate native android chrome\\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\\n  if (browserInfo.browserName === 'android' && browserInfo.chrome && browserInfo.browserVersion > 37) {\\n    browserInfo.browserName = 'and_chr';\\n  }\\n\\n  // For android < 4.4 we want to check the osversion\\n  // not the chrome version, see issue #26\\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\\n  if (browserInfo.browserName === 'android' && browserInfo.osVersion < 5) {\\n    browserInfo.browserVersion = browserInfo.osVersion;\\n  }\\n\\n  // Samsung browser are basically build on Chrome > 44\\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/102\\n  if (browserInfo.browserName === 'android' && browserInfo.samsungBrowser) {\\n    browserInfo.browserName = 'and_chr';\\n    browserInfo.browserVersion = 44;\\n  }\\n\\n  return browserInfo;\\n}\\nmodule.exports = exports['default'];\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"getBrowserName\",\"browserInfo\",\"firefox\",\"mobile\",\"tablet\",\"ios\",\"android\",\"opera\",\"browser\",\"browserByCanIuseAlias\",\"hasOwnProperty\",\"Object\",\"defineProperty\",\"value\",\"default\",\"getBrowserInformation\",\"userAgent\",\"_bowser2\",\"_detect\",\"yandexbrowser\",\"replace\",\"prefixByBrowser\",\"prefix\",\"jsPrefix\",\"cssPrefix\",\"toLowerCase\",\"browserName\",\"browserVersion\",\"version\",\"parseFloat\",\"parseInt\",\"osversion\",\"osVersion\",\"chrome\",\"samsungBrowser\",\"_bowser\",\"__esModule\",\"safari\",\"phantom\",\"webos\",\"blackberry\",\"bada\",\"tizen\",\"chromium\",\"vivaldi\",\"seamoney\",\"sailfish\",\"msie\",\"msedge\",\"firfox\"]\n}\n"]