["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react/cjs/react.development.js"],"~:js","shadow$provide.module$node_modules$react$cjs$react_development=function(k,A,f,m,F){(function(){function c(c){if(null===c||\"undefined\"===typeof c)return null;c=hc&&c[hc]||c[\"@@iterator\"];return\"function\"===typeof c?c:null}function q(c,e){c=(c=c.constructor)&&(c.displayName||c.name)||\"ReactClass\";var x=c+\".\"+e;Xc[x]||(Ha(!1,\"%s(...): Can only update a mounted or mounting component. This usually means you called %s() on an unmounted component. This is a no-op.\\n\\nPlease check the code for the %s component.\",\ne,e,c),Xc[x]=!0)}function e(c,e,f){this.props=c;this.context=e;this.refs=ab;this.updater=f||Tb}function k(c,e,f){this.props=c;this.context=e;this.refs=ab;this.updater=f||Tb}function A(){}function F(c,e,f){this.props=c;this.context=e;this.refs=ab;this.updater=f||Tb}function Wa(c){if(Bb.call(c,\"ref\")){var x=Object.getOwnPropertyDescriptor(c,\"ref\").get;if(x&&x.isReactWarning)return!1}return void 0!==c.ref}function zb(c){if(Bb.call(c,\"key\")){var x=Object.getOwnPropertyDescriptor(c,\"key\").get;if(x&&x.isReactWarning)return!1}return void 0!==\nc.key}function hb(c,e){var x=function(){Cb||(Cb=!0,Ha(!1,\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)\",e))};x.isReactWarning=!0;Object.defineProperty(c,\"key\",{get:x,configurable:!0})}function fa(c,e){var x=function(){Ub||(Ub=!0,Ha(!1,\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)\",\ne))};x.isReactWarning=!0;Object.defineProperty(c,\"ref\",{get:x,configurable:!0})}function M(c,e,f){var x={},h=null,jb=null,k=null,q=null;if(null!=e)for(y in Wa(e)&&(jb=e.ref),zb(e)&&(h=\"\"+e.key),k=void 0===e.__self?null:e.__self,q=void 0===e.__source?null:e.__source,e)Bb.call(e,y)&&!Vb.hasOwnProperty(y)&&(x[y]=e[y]);var z=arguments.length-2;if(1===z)x.children=f;else if(1<z){for(var H=Array(z),r=0;r<z;r++)H[r]=arguments[r+2];Object.freeze&&Object.freeze(H);x.children=H}if(c&&c.defaultProps)for(y in z=\nc.defaultProps,z)void 0===x[y]&&(x[y]=z[y]);if(h||jb)if(\"undefined\"===typeof x.$$typeof||x.$$typeof!==Sb){var y=\"function\"===typeof c?c.displayName||c.name||\"Unknown\":c;h&&hb(x,y);jb&&fa(x,y)}return lc(c,h,jb,k,q,bb.current,x)}function ib(c,e,f){var x=Xa({},c.props),h=c.key,jb=c.ref,k=c._self,q=c._source,z=c._owner;if(null!=e){Wa(e)&&(jb=e.ref,z=bb.current);zb(e)&&(h=\"\"+e.key);if(c.type&&c.type.defaultProps)var y=c.type.defaultProps;for(r in e)Bb.call(e,r)&&!Vb.hasOwnProperty(r)&&(x[r]=void 0===e[r]&&\nvoid 0!==y?y[r]:e[r])}var r=arguments.length-2;if(1===r)x.children=f;else if(1<r){y=Array(r);for(var H=0;H<r;H++)y[H]=arguments[H+2];x.children=y}return lc(c.type,h,jb,k,q,z,x)}function wa(c){return\"object\"===typeof c&&null!==c&&c.$$typeof===Sb}function Da(c){var x={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+c).replace(/[=:]/g,function(c){return x[c]})}function Ea(c,e,f,h){if(mc.length){var x=mc.pop();x.result=c;x.keyPrefix=e;x.func=f;x.context=h;x.count=0;return x}return{result:c,keyPrefix:e,func:f,\ncontext:h,count:0}}function na(c){c.result=null;c.keyPrefix=null;c.func=null;c.context=null;c.count=0;10>mc.length&&mc.push(c)}function ra(e,f,h,k){var x=typeof e;if(\"undefined\"===x||\"boolean\"===x)e=null;var q=!1;if(null===e)q=!0;else switch(x){case \"string\":case \"number\":q=!0;break;case \"object\":switch(e.$$typeof){case Sb:case Vc:case S:case Sd:q=!0}}if(q)return h(k,e,\"\"===f?\".\"+sa(e,0):f),1;q=0;f=\"\"===f?\".\":f+\":\";if(Array.isArray(e))for(var y=0;y<e.length;y++){x=e[y];var z=f+sa(x,y);q+=ra(x,z,h,\nk)}else if(z=c(e),\"function\"===typeof z)for(z===e.entries&&(Ha(Wb,\"Using Maps as children is unsupported and will likely yield unexpected results. Convert it to a sequence/iterable of keyed ReactElements instead.%s\",oa.getStackAddendum()),Wb=!0),e=z.call(e),y=0;!(x=e.next()).done;)x=x.value,z=f+sa(x,y++),q+=ra(x,z,h,k);else\"object\"===x&&(h=\" If you meant to render a collection of children, use an array instead.\"+oa.getStackAddendum(),k=\"\"+e,r(!1,\"Objects are not valid as a React child (found: %s).%s\",\n\"[object Object]\"===k?\"object with keys {\"+Object.keys(e).join(\", \")+\"}\":k,h));return q}function sa(c,e){return\"object\"===typeof c&&null!==c&&null!=c.key?Da(c.key):e.toString(36)}function Ca(c,e,f){c.func.call(c.context,e,c.count++)}function Ia(c,e,f){var x=c.result,h=c.keyPrefix;c=c.func.call(c.context,e,c.count++);Array.isArray(c)?W(c,x,f,Ba.thatReturnsArgument):null!=c&&(wa(c)&&(e=h+(!c.key||e&&e.key===c.key?\"\":(\"\"+c.key).replace(nc,\"$\\x26/\")+\"/\")+f,c=lc(c.type,e,c.ref,c._self,c._source,c._owner,\nc.props)),x.push(c))}function W(c,e,f,h,q){var x=\"\";null!=f&&(x=(\"\"+f).replace(nc,\"$\\x26/\")+\"/\");e=Ea(e,x,h,q);null==c||ra(c,\"\",Ia,e);na(e)}function ma(c){c=c.type;return\"string\"===typeof c?c:\"function\"===typeof c?c.displayName||c.name:null}function z(){if(bb.current){var c=ma(bb.current);if(c)return\"\\n\\nCheck the render method of `\"+c+\"`.\"}return\"\"}function h(c,e){if(c._store&&!c._store.validated&&null==c.key){c._store.validated=!0;var f=z();f||(e=\"string\"===typeof e?e:e.displayName||e.name)&&(f=\n\"\\n\\nCheck the top-level render call using \\x3c\"+e+\"\\x3e.\");Xb[f]||(Xb[f]=!0,e=\"\",c&&c._owner&&c._owner!==bb.current&&(e=\" It was passed a child from \"+ma(c._owner)+\".\"),Z=c,Ha(!1,'Each child in an array or iterator should have a unique \"key\" prop.%s%s See https://fb.me/react-warning-keys for more information.%s',f,e,qb()),Z=null)}}function H(e,f){if(\"object\"===typeof e)if(Array.isArray(e))for(var x=0;x<e.length;x++){var q=e[x];wa(q)&&h(q,f)}else if(wa(e))e._store&&(e._store.validated=!0);else if(e&&\n(x=c(e),\"function\"===typeof x&&x!==e.entries))for(e=x.call(e);!(x=e.next()).done;)wa(x.value)&&h(x.value,f)}function Ab(c){var e=c.type;if(\"function\"===typeof e){var f=e.displayName||e.name,h=e.propTypes;h?(Z=c,Rb(h,c.props,\"prop\",f,qb),Z=null):void 0===e.PropTypes||Zc||(Zc=!0,Ha(!1,\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",f||\"Unknown\"));\"function\"===typeof e.getDefaultProps&&Ha(e.getDefaultProps.isReactClassApproved,\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}\nfunction Ma(c,e,f){var h=\"string\"===typeof c||\"function\"===typeof c||\"symbol\"===typeof c||\"number\"===typeof c;if(!h){var x=\"\";if(void 0===c||\"object\"===typeof c&&null!==c&&0===Object.keys(c).length)x+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\";if(null!==e&&void 0!==e&&void 0!==e.__source){var q=e.__source;q=\"\\n\\nCheck your code at \"+q.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+q.lineNumber+\".\"}else q=\"\";x=q?x+q:x+z();\nx+=qb()||\"\";Ha(!1,\"React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",null==c?c:typeof c,x)}x=M.apply(this,arguments);if(null==x)return x;if(h)for(h=2;h<arguments.length;h++)H(arguments[h],c);if(\"symbol\"===typeof c&&c===Wc){Z=x;h=!0;q=!1;var k=void 0;try{for(var y=Object.keys(x.props)[Symbol.iterator](),r;!(h=(r=y.next()).done);h=!0){var m=r.value;if(!Ud.has(m)){Ha(!1,\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.%s\",\nm,qb());break}}}catch(pb){q=!0,k=pb}finally{try{if(!h&&y[\"return\"])y[\"return\"]()}finally{if(q)throw k;}}null!==x.ref&&Ha(!1,\"Invalid attribute `ref` supplied to `React.Fragment`.%s\",qb());Z=null}else Ab(x);return x}var Xa=f(\"module$node_modules$object_assign$index\"),ab=f(\"module$node_modules$fbjs$lib$emptyObject\"),r=f(\"module$node_modules$fbjs$lib$invariant\"),Ha=f(\"module$node_modules$fbjs$lib$warning\"),Ba=f(\"module$node_modules$fbjs$lib$emptyFunction\"),Rb=f(\"module$node_modules$prop_types$checkPropTypes\"),\nka=\"function\"===typeof Symbol&&Symbol[\"for\"],Sb=ka?Symbol[\"for\"](\"react.element\"):60103,Vc=ka?Symbol[\"for\"](\"react.call\"):60104,S=ka?Symbol[\"for\"](\"react.return\"):60105,Sd=ka?Symbol[\"for\"](\"react.portal\"):60106,Wc=ka?Symbol[\"for\"](\"react.fragment\"):60107,hc=\"function\"===typeof Symbol&&Symbol.iterator;ka=function(){};var $c=function(c){for(var e=arguments.length,f=Array(1<e?e-1:0),h=1;h<e;h++)f[h-1]=arguments[h];var x=0;e=\"Warning: \"+c.replace(/%s/g,function(){return f[x++]});\"undefined\"!==typeof console&&\nconsole.warn(e);try{throw Error(e);}catch(Td){}},ad=ka=function(c,e){if(void 0===e)throw Error(\"`warning(condition, format, ...args)` requires a warning message argument\");if(!c){for(var f=arguments.length,h=Array(2<f?f-2:0),x=2;x<f;x++)h[x-2]=arguments[x];$c.apply(void 0,[e].concat(h))}},Xc={},Tb={isMounted:function(c){return!1},enqueueForceUpdate:function(c,e,f){q(c,\"forceUpdate\")},enqueueReplaceState:function(c,e,f,h){q(c,\"replaceState\")},enqueueSetState:function(c,e,f,h){q(c,\"setState\")}};e.prototype.isReactComponent=\n{};e.prototype.setState=function(c,e){\"object\"!==typeof c&&\"function\"!==typeof c&&null!=c?r(!1,\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\"):void 0;this.updater.enqueueSetState(this,c,e,\"setState\")};e.prototype.forceUpdate=function(c){this.updater.enqueueForceUpdate(this,c,\"forceUpdate\")};ka={isMounted:[\"isMounted\",\"Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.\"],\nreplaceState:[\"replaceState\",\"Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236).\"]};var Vd=function(c,f){Object.defineProperty(e.prototype,c,{get:function(){ad(!1,\"%s(...) is deprecated in plain JavaScript React classes. %s\",f[0],f[1])}})};for(ba in ka)ka.hasOwnProperty(ba)&&Vd(ba,ka[ba]);A.prototype=e.prototype;var ba=k.prototype=new A;ba.constructor=k;Xa(ba,e.prototype);ba.isPureReactComponent=!0;ba=F.prototype=new A;ba.constructor=F;Xa(ba,e.prototype);\nba.unstable_isAsyncReactComponent=!0;ba.render=function(){return this.props.children};var bb={current:null},Bb=Object.prototype.hasOwnProperty,Vb={key:!0,ref:!0,__self:!0,__source:!0},Cb,Ub,lc=function(c,e,f,h,q,k,y){c={$$typeof:Sb,type:c,key:e,ref:f,props:y,_owner:k,_store:{}};Object.defineProperty(c._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1});Object.defineProperty(c,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:h});Object.defineProperty(c,\"_source\",{configurable:!1,\nenumerable:!1,writable:!1,value:q});Object.freeze&&(Object.freeze(c.props),Object.freeze(c));return c},oa={getCurrentStack:null,getStackAddendum:function(){var c=oa.getCurrentStack;return c?c():null}},Wb=!1,nc=/\\/+/g,mc=[],Z=null,Zc=!1,qb=function(){var c=\"\";if(Z){var e=null==Z?\"#empty\":\"string\"===typeof Z||\"number\"===typeof Z?\"#text\":\"string\"===typeof Z.type?Z.type:Z.type===Wc?\"React.Fragment\":Z.type.displayName||Z.type.name||\"Unknown\",f=Z._owner,h=Z._source;f=f&&ma(f);e=\"\\n    in \"+(e||\"Unknown\")+\n(h?\" (at \"+h.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+h.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");c+=e}return c+=oa.getStackAddendum()||\"\"},Ud=new Map([[\"children\",!0],[\"key\",!0]]),Xb={};ba={Children:{map:function(c,e,f){if(null==c)return c;var h=[];W(c,h,null,e,f);return h},forEach:function(c,e,f){if(null==c)return c;e=Ea(null,null,e,f);null==c||ra(c,\"\",Ca,e);na(e)},count:function(c,e){return null==c?0:ra(c,\"\",Ba.thatReturnsNull,null)},toArray:function(c){var e=[];W(c,e,null,Ba.thatReturnsArgument);\nreturn e},only:function(c){wa(c)?void 0:r(!1,\"React.Children.only expected to receive a single React element child.\");return c}},Component:e,PureComponent:k,unstable_AsyncComponent:F,Fragment:Wc,createElement:Ma,cloneElement:function(c,e,f){for(var h=ib.apply(this,arguments),q=2;q<arguments.length;q++)H(arguments[q],h.type);Ab(h);return h},createFactory:function(c){var e=Ma.bind(null,c);e.type=c;Object.defineProperty(e,\"type\",{enumerable:!1,get:function(){ad(!1,\"Factory.type is deprecated. Access the class directly before passing it to createFactory.\");\nObject.defineProperty(this,\"type\",{value:c});return c}});return e},isValidElement:wa,version:\"16.2.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:bb,assign:Xa}};Xa(ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,{ReactDebugCurrentFrame:oa,ReactComponentTreeHook:{}});ba=(ka=Object.freeze({default:ba}))&&ba||ka;m.exports=ba[\"default\"]?ba[\"default\"]:ba})()}","~:source","shadow$provide[\"module$node_modules$react$cjs$react_development\"] = function(global,process,require,module,exports) {\n/** @license React v16.2.0\n * react.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.2.0';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol['for'];\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;\nvar REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;\nvar REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable === 'undefined') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var constructor = publicInstance.constructor;\n    var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\\n\\nPlease check the code for the %s component.', callerName, callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction PureComponent(props, context, updater) {\n  // Duplicated from Component.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\nfunction AsyncComponent(props, context, updater) {\n  // Duplicated from Component.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();\nasyncComponentPrototype.constructor = AsyncComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(asyncComponentPrototype, Component.prototype);\nasyncComponentPrototype.unstable_isAsyncReactComponent = true;\nasyncComponentPrototype.render = function () {\n  return this.props.children;\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar ReactDebugCurrentFrame = {};\n\n{\n  // Component that is being worked on\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      return impl();\n    }\n    return null;\n  };\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_CALL_TYPE:\n          case REACT_RETURN_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n};\n\nfunction getComponentName(fiber) {\n  var type = fiber.type;\n\n  if (typeof type === 'string') {\n    return type;\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name;\n  }\n  return null;\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n{\n  var currentlyValidatingElement = null;\n\n  var propTypesMisspellWarningShown = false;\n\n  var getDisplayName = function (element) {\n    if (element == null) {\n      return '#empty';\n    } else if (typeof element === 'string' || typeof element === 'number') {\n      return '#text';\n    } else if (typeof element.type === 'string') {\n      return element.type;\n    } else if (element.type === REACT_FRAGMENT_TYPE) {\n      return 'React.Fragment';\n    } else {\n      return element.type.displayName || element.type.name || 'Unknown';\n    }\n  };\n\n  var getStackAddendum = function () {\n    var stack = '';\n    if (currentlyValidatingElement) {\n      var name = getDisplayName(currentlyValidatingElement);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));\n    }\n    stack += ReactDebugCurrentFrame.getStackAddendum() || '';\n    return stack;\n  };\n\n  var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';\n  }\n\n  currentlyValidatingElement = element;\n  {\n    warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());\n  }\n  currentlyValidatingElement = null;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  var propTypes = componentClass.propTypes;\n  if (propTypes) {\n    currentlyValidatingElement = element;\n    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);\n    currentlyValidatingElement = null;\n  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  currentlyValidatingElement = fragment;\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n\n      if (!VALID_FRAGMENT_PROPS.has(key)) {\n        warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());\n  }\n\n  currentlyValidatingElement = null;\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    info += getStackAddendum() || '';\n\n    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  // Legacy hook TODO: Warn if this is accessed\n  validatedFactory.type = type;\n\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  Component: Component,\n  PureComponent: PureComponent,\n  unstable_AsyncComponent: AsyncComponent,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentOwner: ReactCurrentOwner,\n    // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n    assign: _assign\n  }\n};\n\n{\n  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3['default'] ? React$3['default'] : React$3;\n\nmodule.exports = react;\n  })();\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$object_assign$index","~$shadow.js","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$emptyFunction","~$module$node_modules$prop_types$checkPropTypes","~$module$node_modules$fbjs$lib$warning"]],"~:properties",["^5",["PureComponent","func","enqueueForceUpdate","map","_store","Children","enqueueReplaceState","unstable_isAsyncReactComponent","assign","forEach","updater","ReactComponentTreeHook","ReactDebugCurrentFrame","prototype","keyPrefix","unstable_AsyncComponent","getStackAddendum","key","children","createElement","Fragment","_self","createFactory","count","setState","__source","isValidElement","configurable","_source","value","enumerable","context","isPureReactComponent","cloneElement","writable","replaceState","current","$$typeof","getCurrentStack","_owner","props","isReactComponent","type","render","ref","version","Component","__self","ReactCurrentOwner","isReactWarning","toArray","only","isMounted","forceUpdate","get","enqueueSetState","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","default","validated","result","constructor","refs"]],"~:compiled-at",1519925395280,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react$cjs$react_development.js\",\n\"lineCount\":24,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react/cjs/react.development.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react$cjs$react_development\\\"] = function(global,process,require,module,exports) {\\n/** @license React v16.2.0\\n * react.development.js\\n *\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';\\n\\n\\n\\nif (process.env.NODE_ENV !== \\\"production\\\") {\\n  (function() {\\n'use strict';\\n\\nvar _assign = require('object-assign');\\nvar emptyObject = require('fbjs/lib/emptyObject');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar checkPropTypes = require('prop-types/checkPropTypes');\\n\\n// TODO: this is special because it gets imported during build.\\n\\nvar ReactVersion = '16.2.0';\\n\\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\\n// nor polyfill, then a plain number is used for performance.\\nvar hasSymbol = typeof Symbol === 'function' && Symbol['for'];\\n\\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;\\nvar REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;\\nvar REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;\\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;\\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;\\n\\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\\n\\nfunction getIteratorFn(maybeIterable) {\\n  if (maybeIterable === null || typeof maybeIterable === 'undefined') {\\n    return null;\\n  }\\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\\n  if (typeof maybeIterator === 'function') {\\n    return maybeIterator;\\n  }\\n  return null;\\n}\\n\\n/**\\n * WARNING: DO NOT manually require this module.\\n * This is a replacement for `invariant(...)` used by the error code system\\n * and will _only_ be required by the corresponding babel pass.\\n * It always throws.\\n */\\n\\n/**\\n * Forked from fbjs/warning:\\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\\n *\\n * Only change is we use console.warn instead of console.error,\\n * and do nothing when 'console' is not supported.\\n * This really simplifies the code.\\n * ---\\n * Similar to invariant but only logs a warning if the condition is not met.\\n * This can be used to log issues in development environments in critical\\n * paths. Removing the logging code for production environments will keep the\\n * same logic and follow the same code paths.\\n */\\n\\nvar lowPriorityWarning = function () {};\\n\\n{\\n  var printWarning = function (format) {\\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n      args[_key - 1] = arguments[_key];\\n    }\\n\\n    var argIndex = 0;\\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\\n      return args[argIndex++];\\n    });\\n    if (typeof console !== 'undefined') {\\n      console.warn(message);\\n    }\\n    try {\\n      // --- Welcome to debugging React ---\\n      // This error was thrown as a convenience so that you can use this stack\\n      // to find the callsite that caused this warning to fire.\\n      throw new Error(message);\\n    } catch (x) {}\\n  };\\n\\n  lowPriorityWarning = function (condition, format) {\\n    if (format === undefined) {\\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\\n    }\\n    if (!condition) {\\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\\n        args[_key2 - 2] = arguments[_key2];\\n      }\\n\\n      printWarning.apply(undefined, [format].concat(args));\\n    }\\n  };\\n}\\n\\nvar lowPriorityWarning$1 = lowPriorityWarning;\\n\\nvar didWarnStateUpdateForUnmountedComponent = {};\\n\\nfunction warnNoop(publicInstance, callerName) {\\n  {\\n    var constructor = publicInstance.constructor;\\n    var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';\\n    var warningKey = componentName + '.' + callerName;\\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\\n      return;\\n    }\\n    warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\\\\n\\\\nPlease check the code for the %s component.', callerName, callerName, componentName);\\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\\n  }\\n}\\n\\n/**\\n * This is the abstract API for an update queue.\\n */\\nvar ReactNoopUpdateQueue = {\\n  /**\\n   * Checks whether or not this composite component is mounted.\\n   * @param {ReactClass} publicInstance The instance we want to test.\\n   * @return {boolean} True if mounted, false otherwise.\\n   * @protected\\n   * @final\\n   */\\n  isMounted: function (publicInstance) {\\n    return false;\\n  },\\n\\n  /**\\n   * Forces an update. This should only be invoked when it is known with\\n   * certainty that we are **not** in a DOM transaction.\\n   *\\n   * You may want to call this when you know that some deeper aspect of the\\n   * component's state has changed but `setState` was not called.\\n   *\\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\\n   * `componentWillUpdate` and `componentDidUpdate`.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {?function} callback Called after component is updated.\\n   * @param {?string} callerName name of the calling function in the public API.\\n   * @internal\\n   */\\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\\n    warnNoop(publicInstance, 'forceUpdate');\\n  },\\n\\n  /**\\n   * Replaces all of the state. Always use this or `setState` to mutate state.\\n   * You should treat `this.state` as immutable.\\n   *\\n   * There is no guarantee that `this.state` will be immediately updated, so\\n   * accessing `this.state` after calling this method may return the old value.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} completeState Next state.\\n   * @param {?function} callback Called after component is updated.\\n   * @param {?string} callerName name of the calling function in the public API.\\n   * @internal\\n   */\\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\\n    warnNoop(publicInstance, 'replaceState');\\n  },\\n\\n  /**\\n   * Sets a subset of the state. This only exists because _pendingState is\\n   * internal. This provides a merging strategy that is not available to deep\\n   * properties which is confusing. TODO: Expose pendingState or don't use it\\n   * during the merge.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} partialState Next partial state to be merged with state.\\n   * @param {?function} callback Called after component is updated.\\n   * @param {?string} Name of the calling function in the public API.\\n   * @internal\\n   */\\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\\n    warnNoop(publicInstance, 'setState');\\n  }\\n};\\n\\n/**\\n * Base class helpers for the updating state of a component.\\n */\\nfunction Component(props, context, updater) {\\n  this.props = props;\\n  this.context = context;\\n  this.refs = emptyObject;\\n  // We initialize the default updater but the real one gets injected by the\\n  // renderer.\\n  this.updater = updater || ReactNoopUpdateQueue;\\n}\\n\\nComponent.prototype.isReactComponent = {};\\n\\n/**\\n * Sets a subset of the state. Always use this to mutate\\n * state. You should treat `this.state` as immutable.\\n *\\n * There is no guarantee that `this.state` will be immediately updated, so\\n * accessing `this.state` after calling this method may return the old value.\\n *\\n * There is no guarantee that calls to `setState` will run synchronously,\\n * as they may eventually be batched together.  You can provide an optional\\n * callback that will be executed when the call to setState is actually\\n * completed.\\n *\\n * When a function is provided to setState, it will be called at some point in\\n * the future (not synchronously). It will be called with the up to date\\n * component arguments (state, props, context). These values can be different\\n * from this.* because your function may be called after receiveProps but before\\n * shouldComponentUpdate, and this new state, props, and context will not yet be\\n * assigned to this.\\n *\\n * @param {object|function} partialState Next partial state or function to\\n *        produce next partial state to be merged with current state.\\n * @param {?function} callback Called after state is updated.\\n * @final\\n * @protected\\n */\\nComponent.prototype.setState = function (partialState, callback) {\\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\\n};\\n\\n/**\\n * Forces an update. This should only be invoked when it is known with\\n * certainty that we are **not** in a DOM transaction.\\n *\\n * You may want to call this when you know that some deeper aspect of the\\n * component's state has changed but `setState` was not called.\\n *\\n * This will not invoke `shouldComponentUpdate`, but it will invoke\\n * `componentWillUpdate` and `componentDidUpdate`.\\n *\\n * @param {?function} callback Called after update is complete.\\n * @final\\n * @protected\\n */\\nComponent.prototype.forceUpdate = function (callback) {\\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\\n};\\n\\n/**\\n * Deprecated APIs. These APIs used to exist on classic React classes but since\\n * we would like to deprecate them, we're not going to move them over to this\\n * modern base class. Instead, we define a getter that warns if it's accessed.\\n */\\n{\\n  var deprecatedAPIs = {\\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\\n  };\\n  var defineDeprecationWarning = function (methodName, info) {\\n    Object.defineProperty(Component.prototype, methodName, {\\n      get: function () {\\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\\n        return undefined;\\n      }\\n    });\\n  };\\n  for (var fnName in deprecatedAPIs) {\\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\\n    }\\n  }\\n}\\n\\n/**\\n * Base class helpers for the updating state of a component.\\n */\\nfunction PureComponent(props, context, updater) {\\n  // Duplicated from Component.\\n  this.props = props;\\n  this.context = context;\\n  this.refs = emptyObject;\\n  // We initialize the default updater but the real one gets injected by the\\n  // renderer.\\n  this.updater = updater || ReactNoopUpdateQueue;\\n}\\n\\nfunction ComponentDummy() {}\\nComponentDummy.prototype = Component.prototype;\\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\\npureComponentPrototype.constructor = PureComponent;\\n// Avoid an extra prototype jump for these methods.\\n_assign(pureComponentPrototype, Component.prototype);\\npureComponentPrototype.isPureReactComponent = true;\\n\\nfunction AsyncComponent(props, context, updater) {\\n  // Duplicated from Component.\\n  this.props = props;\\n  this.context = context;\\n  this.refs = emptyObject;\\n  // We initialize the default updater but the real one gets injected by the\\n  // renderer.\\n  this.updater = updater || ReactNoopUpdateQueue;\\n}\\n\\nvar asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();\\nasyncComponentPrototype.constructor = AsyncComponent;\\n// Avoid an extra prototype jump for these methods.\\n_assign(asyncComponentPrototype, Component.prototype);\\nasyncComponentPrototype.unstable_isAsyncReactComponent = true;\\nasyncComponentPrototype.render = function () {\\n  return this.props.children;\\n};\\n\\n/**\\n * Keeps track of the current owner.\\n *\\n * The current owner is the component who should own any components that are\\n * currently being constructed.\\n */\\nvar ReactCurrentOwner = {\\n  /**\\n   * @internal\\n   * @type {ReactComponent}\\n   */\\n  current: null\\n};\\n\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\nvar RESERVED_PROPS = {\\n  key: true,\\n  ref: true,\\n  __self: true,\\n  __source: true\\n};\\n\\nvar specialPropKeyWarningShown;\\nvar specialPropRefWarningShown;\\n\\nfunction hasValidRef(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'ref')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n  return config.ref !== undefined;\\n}\\n\\nfunction hasValidKey(config) {\\n  {\\n    if (hasOwnProperty.call(config, 'key')) {\\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\\n      if (getter && getter.isReactWarning) {\\n        return false;\\n      }\\n    }\\n  }\\n  return config.key !== undefined;\\n}\\n\\nfunction defineKeyPropWarningGetter(props, displayName) {\\n  var warnAboutAccessingKey = function () {\\n    if (!specialPropKeyWarningShown) {\\n      specialPropKeyWarningShown = true;\\n      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\\n    }\\n  };\\n  warnAboutAccessingKey.isReactWarning = true;\\n  Object.defineProperty(props, 'key', {\\n    get: warnAboutAccessingKey,\\n    configurable: true\\n  });\\n}\\n\\nfunction defineRefPropWarningGetter(props, displayName) {\\n  var warnAboutAccessingRef = function () {\\n    if (!specialPropRefWarningShown) {\\n      specialPropRefWarningShown = true;\\n      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\\n    }\\n  };\\n  warnAboutAccessingRef.isReactWarning = true;\\n  Object.defineProperty(props, 'ref', {\\n    get: warnAboutAccessingRef,\\n    configurable: true\\n  });\\n}\\n\\n/**\\n * Factory method to create a new React element. This no longer adheres to\\n * the class pattern, so do not use new to call it. Also, no instanceof check\\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\\n * if something is a React Element.\\n *\\n * @param {*} type\\n * @param {*} key\\n * @param {string|object} ref\\n * @param {*} self A *temporary* helper to detect places where `this` is\\n * different from the `owner` when React.createElement is called, so that we\\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\\n * functions, and as long as `this` and owner are the same, there will be no\\n * change in behavior.\\n * @param {*} source An annotation object (added by a transpiler or otherwise)\\n * indicating filename, line number, and/or other information.\\n * @param {*} owner\\n * @param {*} props\\n * @internal\\n */\\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\\n  var element = {\\n    // This tag allow us to uniquely identify this as a React Element\\n    $$typeof: REACT_ELEMENT_TYPE,\\n\\n    // Built-in properties that belong on the element\\n    type: type,\\n    key: key,\\n    ref: ref,\\n    props: props,\\n\\n    // Record the component responsible for creating this element.\\n    _owner: owner\\n  };\\n\\n  {\\n    // The validation flag is currently mutative. We put it on\\n    // an external backing store so that we can freeze the whole object.\\n    // This can be replaced with a WeakMap once they are implemented in\\n    // commonly used development environments.\\n    element._store = {};\\n\\n    // To make comparing ReactElements easier for testing purposes, we make\\n    // the validation flag non-enumerable (where possible, which should\\n    // include every environment we run tests in), so the test framework\\n    // ignores it.\\n    Object.defineProperty(element._store, 'validated', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: true,\\n      value: false\\n    });\\n    // self and source are DEV only properties.\\n    Object.defineProperty(element, '_self', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: self\\n    });\\n    // Two elements created in two different places should be considered\\n    // equal for testing purposes and therefore we hide it from enumeration.\\n    Object.defineProperty(element, '_source', {\\n      configurable: false,\\n      enumerable: false,\\n      writable: false,\\n      value: source\\n    });\\n    if (Object.freeze) {\\n      Object.freeze(element.props);\\n      Object.freeze(element);\\n    }\\n  }\\n\\n  return element;\\n};\\n\\n/**\\n * Create and return a new ReactElement of the given type.\\n * See https://reactjs.org/docs/react-api.html#createelement\\n */\\nfunction createElement(type, config, children) {\\n  var propName;\\n\\n  // Reserved names are extracted\\n  var props = {};\\n\\n  var key = null;\\n  var ref = null;\\n  var self = null;\\n  var source = null;\\n\\n  if (config != null) {\\n    if (hasValidRef(config)) {\\n      ref = config.ref;\\n    }\\n    if (hasValidKey(config)) {\\n      key = '' + config.key;\\n    }\\n\\n    self = config.__self === undefined ? null : config.__self;\\n    source = config.__source === undefined ? null : config.__source;\\n    // Remaining properties are added to a new props object\\n    for (propName in config) {\\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        props[propName] = config[propName];\\n      }\\n    }\\n  }\\n\\n  // Children can be more than one argument, and those are transferred onto\\n  // the newly allocated props object.\\n  var childrenLength = arguments.length - 2;\\n  if (childrenLength === 1) {\\n    props.children = children;\\n  } else if (childrenLength > 1) {\\n    var childArray = Array(childrenLength);\\n    for (var i = 0; i < childrenLength; i++) {\\n      childArray[i] = arguments[i + 2];\\n    }\\n    {\\n      if (Object.freeze) {\\n        Object.freeze(childArray);\\n      }\\n    }\\n    props.children = childArray;\\n  }\\n\\n  // Resolve default props\\n  if (type && type.defaultProps) {\\n    var defaultProps = type.defaultProps;\\n    for (propName in defaultProps) {\\n      if (props[propName] === undefined) {\\n        props[propName] = defaultProps[propName];\\n      }\\n    }\\n  }\\n  {\\n    if (key || ref) {\\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\\n        if (key) {\\n          defineKeyPropWarningGetter(props, displayName);\\n        }\\n        if (ref) {\\n          defineRefPropWarningGetter(props, displayName);\\n        }\\n      }\\n    }\\n  }\\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\\n}\\n\\n/**\\n * Return a function that produces ReactElements of a given type.\\n * See https://reactjs.org/docs/react-api.html#createfactory\\n */\\n\\n\\nfunction cloneAndReplaceKey(oldElement, newKey) {\\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\\n\\n  return newElement;\\n}\\n\\n/**\\n * Clone and return a new ReactElement using element as the starting point.\\n * See https://reactjs.org/docs/react-api.html#cloneelement\\n */\\nfunction cloneElement(element, config, children) {\\n  var propName;\\n\\n  // Original props are copied\\n  var props = _assign({}, element.props);\\n\\n  // Reserved names are extracted\\n  var key = element.key;\\n  var ref = element.ref;\\n  // Self is preserved since the owner is preserved.\\n  var self = element._self;\\n  // Source is preserved since cloneElement is unlikely to be targeted by a\\n  // transpiler, and the original source is probably a better indicator of the\\n  // true owner.\\n  var source = element._source;\\n\\n  // Owner will be preserved, unless ref is overridden\\n  var owner = element._owner;\\n\\n  if (config != null) {\\n    if (hasValidRef(config)) {\\n      // Silently steal the ref from the parent.\\n      ref = config.ref;\\n      owner = ReactCurrentOwner.current;\\n    }\\n    if (hasValidKey(config)) {\\n      key = '' + config.key;\\n    }\\n\\n    // Remaining properties override existing props\\n    var defaultProps;\\n    if (element.type && element.type.defaultProps) {\\n      defaultProps = element.type.defaultProps;\\n    }\\n    for (propName in config) {\\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        if (config[propName] === undefined && defaultProps !== undefined) {\\n          // Resolve default props\\n          props[propName] = defaultProps[propName];\\n        } else {\\n          props[propName] = config[propName];\\n        }\\n      }\\n    }\\n  }\\n\\n  // Children can be more than one argument, and those are transferred onto\\n  // the newly allocated props object.\\n  var childrenLength = arguments.length - 2;\\n  if (childrenLength === 1) {\\n    props.children = children;\\n  } else if (childrenLength > 1) {\\n    var childArray = Array(childrenLength);\\n    for (var i = 0; i < childrenLength; i++) {\\n      childArray[i] = arguments[i + 2];\\n    }\\n    props.children = childArray;\\n  }\\n\\n  return ReactElement(element.type, key, ref, self, source, owner, props);\\n}\\n\\n/**\\n * Verifies the object is a ReactElement.\\n * See https://reactjs.org/docs/react-api.html#isvalidelement\\n * @param {?object} object\\n * @return {boolean} True if `object` is a valid component.\\n * @final\\n */\\nfunction isValidElement(object) {\\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\\n}\\n\\nvar ReactDebugCurrentFrame = {};\\n\\n{\\n  // Component that is being worked on\\n  ReactDebugCurrentFrame.getCurrentStack = null;\\n\\n  ReactDebugCurrentFrame.getStackAddendum = function () {\\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\\n    if (impl) {\\n      return impl();\\n    }\\n    return null;\\n  };\\n}\\n\\nvar SEPARATOR = '.';\\nvar SUBSEPARATOR = ':';\\n\\n/**\\n * Escape and wrap key so it is safe to use as a reactid\\n *\\n * @param {string} key to be escaped.\\n * @return {string} the escaped key.\\n */\\nfunction escape(key) {\\n  var escapeRegex = /[=:]/g;\\n  var escaperLookup = {\\n    '=': '=0',\\n    ':': '=2'\\n  };\\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\\n    return escaperLookup[match];\\n  });\\n\\n  return '$' + escapedString;\\n}\\n\\n/**\\n * TODO: Test that a single child and an array with one item have the same key\\n * pattern.\\n */\\n\\nvar didWarnAboutMaps = false;\\n\\nvar userProvidedKeyEscapeRegex = /\\\\/+/g;\\nfunction escapeUserProvidedKey(text) {\\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\\n}\\n\\nvar POOL_SIZE = 10;\\nvar traverseContextPool = [];\\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\\n  if (traverseContextPool.length) {\\n    var traverseContext = traverseContextPool.pop();\\n    traverseContext.result = mapResult;\\n    traverseContext.keyPrefix = keyPrefix;\\n    traverseContext.func = mapFunction;\\n    traverseContext.context = mapContext;\\n    traverseContext.count = 0;\\n    return traverseContext;\\n  } else {\\n    return {\\n      result: mapResult,\\n      keyPrefix: keyPrefix,\\n      func: mapFunction,\\n      context: mapContext,\\n      count: 0\\n    };\\n  }\\n}\\n\\nfunction releaseTraverseContext(traverseContext) {\\n  traverseContext.result = null;\\n  traverseContext.keyPrefix = null;\\n  traverseContext.func = null;\\n  traverseContext.context = null;\\n  traverseContext.count = 0;\\n  if (traverseContextPool.length < POOL_SIZE) {\\n    traverseContextPool.push(traverseContext);\\n  }\\n}\\n\\n/**\\n * @param {?*} children Children tree container.\\n * @param {!string} nameSoFar Name of the key path so far.\\n * @param {!function} callback Callback to invoke with each child found.\\n * @param {?*} traverseContext Used to pass information throughout the traversal\\n * process.\\n * @return {!number} The number of children in this subtree.\\n */\\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\\n  var type = typeof children;\\n\\n  if (type === 'undefined' || type === 'boolean') {\\n    // All of the above are perceived as null.\\n    children = null;\\n  }\\n\\n  var invokeCallback = false;\\n\\n  if (children === null) {\\n    invokeCallback = true;\\n  } else {\\n    switch (type) {\\n      case 'string':\\n      case 'number':\\n        invokeCallback = true;\\n        break;\\n      case 'object':\\n        switch (children.$$typeof) {\\n          case REACT_ELEMENT_TYPE:\\n          case REACT_CALL_TYPE:\\n          case REACT_RETURN_TYPE:\\n          case REACT_PORTAL_TYPE:\\n            invokeCallback = true;\\n        }\\n    }\\n  }\\n\\n  if (invokeCallback) {\\n    callback(traverseContext, children,\\n    // If it's the only child, treat the name as if it was wrapped in an array\\n    // so that it's consistent if the number of children grows.\\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\\n    return 1;\\n  }\\n\\n  var child;\\n  var nextName;\\n  var subtreeCount = 0; // Count of children found in the current subtree.\\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\\n\\n  if (Array.isArray(children)) {\\n    for (var i = 0; i < children.length; i++) {\\n      child = children[i];\\n      nextName = nextNamePrefix + getComponentKey(child, i);\\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\\n    }\\n  } else {\\n    var iteratorFn = getIteratorFn(children);\\n    if (typeof iteratorFn === 'function') {\\n      {\\n        // Warn about using Maps as children\\n        if (iteratorFn === children.entries) {\\n          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());\\n          didWarnAboutMaps = true;\\n        }\\n      }\\n\\n      var iterator = iteratorFn.call(children);\\n      var step;\\n      var ii = 0;\\n      while (!(step = iterator.next()).done) {\\n        child = step.value;\\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\\n      }\\n    } else if (type === 'object') {\\n      var addendum = '';\\n      {\\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\\n      }\\n      var childrenString = '' + children;\\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\\n    }\\n  }\\n\\n  return subtreeCount;\\n}\\n\\n/**\\n * Traverses children that are typically specified as `props.children`, but\\n * might also be specified through attributes:\\n *\\n * - `traverseAllChildren(this.props.children, ...)`\\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\\n *\\n * The `traverseContext` is an optional argument that is passed through the\\n * entire traversal. It can be used to store accumulations or anything else that\\n * the callback might find relevant.\\n *\\n * @param {?*} children Children tree object.\\n * @param {!function} callback To invoke upon traversing each child.\\n * @param {?*} traverseContext Context for traversal.\\n * @return {!number} The number of children in this subtree.\\n */\\nfunction traverseAllChildren(children, callback, traverseContext) {\\n  if (children == null) {\\n    return 0;\\n  }\\n\\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\\n}\\n\\n/**\\n * Generate a key string that identifies a component within a set.\\n *\\n * @param {*} component A component that could contain a manual key.\\n * @param {number} index Index that is used if a manual key is not provided.\\n * @return {string}\\n */\\nfunction getComponentKey(component, index) {\\n  // Do some typechecking here since we call this blindly. We want to ensure\\n  // that we don't block potential future ES APIs.\\n  if (typeof component === 'object' && component !== null && component.key != null) {\\n    // Explicit key\\n    return escape(component.key);\\n  }\\n  // Implicit key determined by the index in the set\\n  return index.toString(36);\\n}\\n\\nfunction forEachSingleChild(bookKeeping, child, name) {\\n  var func = bookKeeping.func,\\n      context = bookKeeping.context;\\n\\n  func.call(context, child, bookKeeping.count++);\\n}\\n\\n/**\\n * Iterates through children that are typically specified as `props.children`.\\n *\\n * See https://reactjs.org/docs/react-api.html#react.children.foreach\\n *\\n * The provided forEachFunc(child, index) will be called for each\\n * leaf child.\\n *\\n * @param {?*} children Children tree container.\\n * @param {function(*, int)} forEachFunc\\n * @param {*} forEachContext Context for forEachContext.\\n */\\nfunction forEachChildren(children, forEachFunc, forEachContext) {\\n  if (children == null) {\\n    return children;\\n  }\\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\\n  releaseTraverseContext(traverseContext);\\n}\\n\\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\\n  var result = bookKeeping.result,\\n      keyPrefix = bookKeeping.keyPrefix,\\n      func = bookKeeping.func,\\n      context = bookKeeping.context;\\n\\n\\n  var mappedChild = func.call(context, child, bookKeeping.count++);\\n  if (Array.isArray(mappedChild)) {\\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\\n  } else if (mappedChild != null) {\\n    if (isValidElement(mappedChild)) {\\n      mappedChild = cloneAndReplaceKey(mappedChild,\\n      // Keep both the (mapped) and old keys if they differ, just as\\n      // traverseAllChildren used to do for objects as children\\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\\n    }\\n    result.push(mappedChild);\\n  }\\n}\\n\\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\\n  var escapedPrefix = '';\\n  if (prefix != null) {\\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\\n  }\\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\\n  releaseTraverseContext(traverseContext);\\n}\\n\\n/**\\n * Maps children that are typically specified as `props.children`.\\n *\\n * See https://reactjs.org/docs/react-api.html#react.children.map\\n *\\n * The provided mapFunction(child, key, index) will be called for each\\n * leaf child.\\n *\\n * @param {?*} children Children tree container.\\n * @param {function(*, int)} func The map function.\\n * @param {*} context Context for mapFunction.\\n * @return {object} Object containing the ordered map of results.\\n */\\nfunction mapChildren(children, func, context) {\\n  if (children == null) {\\n    return children;\\n  }\\n  var result = [];\\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\\n  return result;\\n}\\n\\n/**\\n * Count the number of children that are typically specified as\\n * `props.children`.\\n *\\n * See https://reactjs.org/docs/react-api.html#react.children.count\\n *\\n * @param {?*} children Children tree container.\\n * @return {number} The number of children.\\n */\\nfunction countChildren(children, context) {\\n  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\\n}\\n\\n/**\\n * Flatten a children object (typically specified as `props.children`) and\\n * return an array with appropriately re-keyed children.\\n *\\n * See https://reactjs.org/docs/react-api.html#react.children.toarray\\n */\\nfunction toArray(children) {\\n  var result = [];\\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\\n  return result;\\n}\\n\\n/**\\n * Returns the first child in a collection of children and verifies that there\\n * is only one child in the collection.\\n *\\n * See https://reactjs.org/docs/react-api.html#react.children.only\\n *\\n * The current implementation of this function assumes that a single child gets\\n * passed without a wrapper, but the purpose of this helper function is to\\n * abstract away the particular structure of children.\\n *\\n * @param {?object} children Child collection structure.\\n * @return {ReactElement} The first and only `ReactElement` contained in the\\n * structure.\\n */\\nfunction onlyChild(children) {\\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\\n  return children;\\n}\\n\\nvar describeComponentFrame = function (name, source, ownerName) {\\n  return '\\\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\\n};\\n\\nfunction getComponentName(fiber) {\\n  var type = fiber.type;\\n\\n  if (typeof type === 'string') {\\n    return type;\\n  }\\n  if (typeof type === 'function') {\\n    return type.displayName || type.name;\\n  }\\n  return null;\\n}\\n\\n/**\\n * ReactElementValidator provides a wrapper around a element factory\\n * which validates the props passed to the element. This is intended to be\\n * used only in DEV and could be replaced by a static type checker for languages\\n * that support it.\\n */\\n\\n{\\n  var currentlyValidatingElement = null;\\n\\n  var propTypesMisspellWarningShown = false;\\n\\n  var getDisplayName = function (element) {\\n    if (element == null) {\\n      return '#empty';\\n    } else if (typeof element === 'string' || typeof element === 'number') {\\n      return '#text';\\n    } else if (typeof element.type === 'string') {\\n      return element.type;\\n    } else if (element.type === REACT_FRAGMENT_TYPE) {\\n      return 'React.Fragment';\\n    } else {\\n      return element.type.displayName || element.type.name || 'Unknown';\\n    }\\n  };\\n\\n  var getStackAddendum = function () {\\n    var stack = '';\\n    if (currentlyValidatingElement) {\\n      var name = getDisplayName(currentlyValidatingElement);\\n      var owner = currentlyValidatingElement._owner;\\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));\\n    }\\n    stack += ReactDebugCurrentFrame.getStackAddendum() || '';\\n    return stack;\\n  };\\n\\n  var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);\\n}\\n\\nfunction getDeclarationErrorAddendum() {\\n  if (ReactCurrentOwner.current) {\\n    var name = getComponentName(ReactCurrentOwner.current);\\n    if (name) {\\n      return '\\\\n\\\\nCheck the render method of `' + name + '`.';\\n    }\\n  }\\n  return '';\\n}\\n\\nfunction getSourceInfoErrorAddendum(elementProps) {\\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\\n    var source = elementProps.__source;\\n    var fileName = source.fileName.replace(/^.*[\\\\\\\\\\\\/]/, '');\\n    var lineNumber = source.lineNumber;\\n    return '\\\\n\\\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\\n  }\\n  return '';\\n}\\n\\n/**\\n * Warn if there's no key explicitly set on dynamic arrays of children or\\n * object keys are not valid. This allows us to keep track of children between\\n * updates.\\n */\\nvar ownerHasKeyUseWarning = {};\\n\\nfunction getCurrentComponentErrorInfo(parentType) {\\n  var info = getDeclarationErrorAddendum();\\n\\n  if (!info) {\\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\\n    if (parentName) {\\n      info = '\\\\n\\\\nCheck the top-level render call using <' + parentName + '>.';\\n    }\\n  }\\n  return info;\\n}\\n\\n/**\\n * Warn if the element doesn't have an explicit key assigned to it.\\n * This element is in an array. The array could grow and shrink or be\\n * reordered. All children that haven't already been validated are required to\\n * have a \\\"key\\\" property assigned to it. Error statuses are cached so a warning\\n * will only be shown once.\\n *\\n * @internal\\n * @param {ReactElement} element Element that requires a key.\\n * @param {*} parentType element's parent's type.\\n */\\nfunction validateExplicitKey(element, parentType) {\\n  if (!element._store || element._store.validated || element.key != null) {\\n    return;\\n  }\\n  element._store.validated = true;\\n\\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\\n    return;\\n  }\\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\\n\\n  // Usually the current owner is the offender, but if it accepts children as a\\n  // property, it may be the creator of the child that's responsible for\\n  // assigning it a key.\\n  var childOwner = '';\\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\\n    // Give the component that originally created this child.\\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';\\n  }\\n\\n  currentlyValidatingElement = element;\\n  {\\n    warning(false, 'Each child in an array or iterator should have a unique \\\"key\\\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());\\n  }\\n  currentlyValidatingElement = null;\\n}\\n\\n/**\\n * Ensure that every element either is passed in a static location, in an\\n * array with an explicit keys property defined, or in an object literal\\n * with valid key property.\\n *\\n * @internal\\n * @param {ReactNode} node Statically passed child of any type.\\n * @param {*} parentType node's parent's type.\\n */\\nfunction validateChildKeys(node, parentType) {\\n  if (typeof node !== 'object') {\\n    return;\\n  }\\n  if (Array.isArray(node)) {\\n    for (var i = 0; i < node.length; i++) {\\n      var child = node[i];\\n      if (isValidElement(child)) {\\n        validateExplicitKey(child, parentType);\\n      }\\n    }\\n  } else if (isValidElement(node)) {\\n    // This element was passed in a valid location.\\n    if (node._store) {\\n      node._store.validated = true;\\n    }\\n  } else if (node) {\\n    var iteratorFn = getIteratorFn(node);\\n    if (typeof iteratorFn === 'function') {\\n      // Entry iterators used to provide implicit keys,\\n      // but now we print a separate warning for them later.\\n      if (iteratorFn !== node.entries) {\\n        var iterator = iteratorFn.call(node);\\n        var step;\\n        while (!(step = iterator.next()).done) {\\n          if (isValidElement(step.value)) {\\n            validateExplicitKey(step.value, parentType);\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * Given an element, validate that its props follow the propTypes definition,\\n * provided by the type.\\n *\\n * @param {ReactElement} element\\n */\\nfunction validatePropTypes(element) {\\n  var componentClass = element.type;\\n  if (typeof componentClass !== 'function') {\\n    return;\\n  }\\n  var name = componentClass.displayName || componentClass.name;\\n  var propTypes = componentClass.propTypes;\\n  if (propTypes) {\\n    currentlyValidatingElement = element;\\n    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);\\n    currentlyValidatingElement = null;\\n  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {\\n    propTypesMisspellWarningShown = true;\\n    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\\n  }\\n  if (typeof componentClass.getDefaultProps === 'function') {\\n    warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\\n  }\\n}\\n\\n/**\\n * Given a fragment, validate that it can only be provided with fragment props\\n * @param {ReactElement} fragment\\n */\\nfunction validateFragmentProps(fragment) {\\n  currentlyValidatingElement = fragment;\\n\\n  var _iteratorNormalCompletion = true;\\n  var _didIteratorError = false;\\n  var _iteratorError = undefined;\\n\\n  try {\\n    for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n      var key = _step.value;\\n\\n      if (!VALID_FRAGMENT_PROPS.has(key)) {\\n        warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());\\n        break;\\n      }\\n    }\\n  } catch (err) {\\n    _didIteratorError = true;\\n    _iteratorError = err;\\n  } finally {\\n    try {\\n      if (!_iteratorNormalCompletion && _iterator['return']) {\\n        _iterator['return']();\\n      }\\n    } finally {\\n      if (_didIteratorError) {\\n        throw _iteratorError;\\n      }\\n    }\\n  }\\n\\n  if (fragment.ref !== null) {\\n    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());\\n  }\\n\\n  currentlyValidatingElement = null;\\n}\\n\\nfunction createElementWithValidation(type, props, children) {\\n  var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';\\n  // We warn in this case but don't throw. We expect the element creation to\\n  // succeed and there will likely be errors in render.\\n  if (!validType) {\\n    var info = '';\\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\\n      info += ' You likely forgot to export your component from the file ' + \\\"it's defined in, or you might have mixed up default and named imports.\\\";\\n    }\\n\\n    var sourceInfo = getSourceInfoErrorAddendum(props);\\n    if (sourceInfo) {\\n      info += sourceInfo;\\n    } else {\\n      info += getDeclarationErrorAddendum();\\n    }\\n\\n    info += getStackAddendum() || '';\\n\\n    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);\\n  }\\n\\n  var element = createElement.apply(this, arguments);\\n\\n  // The result can be nullish if a mock or a custom function is used.\\n  // TODO: Drop this when these are no longer allowed as the type argument.\\n  if (element == null) {\\n    return element;\\n  }\\n\\n  // Skip key warning if the type isn't valid since our key validation logic\\n  // doesn't expect a non-string/function type and can throw confusing errors.\\n  // We don't want exception behavior to differ between dev and prod.\\n  // (Rendering will throw with a helpful message and as soon as the type is\\n  // fixed, the key warnings will appear.)\\n  if (validType) {\\n    for (var i = 2; i < arguments.length; i++) {\\n      validateChildKeys(arguments[i], type);\\n    }\\n  }\\n\\n  if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {\\n    validateFragmentProps(element);\\n  } else {\\n    validatePropTypes(element);\\n  }\\n\\n  return element;\\n}\\n\\nfunction createFactoryWithValidation(type) {\\n  var validatedFactory = createElementWithValidation.bind(null, type);\\n  // Legacy hook TODO: Warn if this is accessed\\n  validatedFactory.type = type;\\n\\n  {\\n    Object.defineProperty(validatedFactory, 'type', {\\n      enumerable: false,\\n      get: function () {\\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\\n        Object.defineProperty(this, 'type', {\\n          value: type\\n        });\\n        return type;\\n      }\\n    });\\n  }\\n\\n  return validatedFactory;\\n}\\n\\nfunction cloneElementWithValidation(element, props, children) {\\n  var newElement = cloneElement.apply(this, arguments);\\n  for (var i = 2; i < arguments.length; i++) {\\n    validateChildKeys(arguments[i], newElement.type);\\n  }\\n  validatePropTypes(newElement);\\n  return newElement;\\n}\\n\\nvar React = {\\n  Children: {\\n    map: mapChildren,\\n    forEach: forEachChildren,\\n    count: countChildren,\\n    toArray: toArray,\\n    only: onlyChild\\n  },\\n\\n  Component: Component,\\n  PureComponent: PureComponent,\\n  unstable_AsyncComponent: AsyncComponent,\\n\\n  Fragment: REACT_FRAGMENT_TYPE,\\n\\n  createElement: createElementWithValidation,\\n  cloneElement: cloneElementWithValidation,\\n  createFactory: createFactoryWithValidation,\\n  isValidElement: isValidElement,\\n\\n  version: ReactVersion,\\n\\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\\n    ReactCurrentOwner: ReactCurrentOwner,\\n    // Used by renderers to avoid bundling object-assign twice in UMD bundles:\\n    assign: _assign\\n  }\\n};\\n\\n{\\n  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {\\n    // These should not be included in production.\\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\\n    // TODO: remove in React 17.0.\\n    ReactComponentTreeHook: {}\\n  });\\n}\\n\\n\\n\\nvar React$2 = Object.freeze({\\n\\tdefault: React\\n});\\n\\nvar React$3 = ( React$2 && React ) || React$2;\\n\\n// TODO: decide on the top-level export form.\\n// This is hacky but makes it work with both Rollup and Jest.\\nvar react = React$3['default'] ? React$3['default'] : React$3;\\n\\nmodule.exports = react;\\n  })();\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"getIteratorFn\",\"maybeIterable\",\"maybeIterator\",\"MAYBE_ITERATOR_SYMBOL\",\"FAUX_ITERATOR_SYMBOL\",\"warnNoop\",\"publicInstance\",\"callerName\",\"componentName\",\"constructor\",\"displayName\",\"name\",\"warningKey\",\"didWarnStateUpdateForUnmountedComponent\",\"warning\",\"Component\",\"props\",\"context\",\"updater\",\"refs\",\"emptyObject\",\"ReactNoopUpdateQueue\",\"PureComponent\",\"ComponentDummy\",\"AsyncComponent\",\"hasValidRef\",\"config\",\"hasOwnProperty\",\"call\",\"getter\",\"Object\",\"getOwnPropertyDescriptor\",\"get\",\"isReactWarning\",\"undefined\",\"ref\",\"hasValidKey\",\"key\",\"defineKeyPropWarningGetter\",\"warnAboutAccessingKey\",\"specialPropKeyWarningShown\",\"defineProperty\",\"configurable\",\"defineRefPropWarningGetter\",\"warnAboutAccessingRef\",\"specialPropRefWarningShown\",\"createElement\",\"type\",\"children\",\"self\",\"source\",\"propName\",\"__self\",\"__source\",\"RESERVED_PROPS\",\"childrenLength\",\"arguments\",\"length\",\"childArray\",\"Array\",\"i\",\"freeze\",\"defaultProps\",\"$$typeof\",\"REACT_ELEMENT_TYPE\",\"ReactElement\",\"ReactCurrentOwner\",\"current\",\"cloneElement\",\"element\",\"_assign\",\"_self\",\"_source\",\"owner\",\"_owner\",\"isValidElement\",\"object\",\"escape\",\"escaperLookup\",\"replace\",\"escapedString\",\"escapeRegex\",\"match\",\"getPooledTraverseContext\",\"mapResult\",\"keyPrefix\",\"mapFunction\",\"mapContext\",\"traverseContextPool\",\"traverseContext\",\"pop\",\"result\",\"func\",\"count\",\"releaseTraverseContext\",\"POOL_SIZE\",\"push\",\"traverseAllChildrenImpl\",\"nameSoFar\",\"callback\",\"invokeCallback\",\"REACT_CALL_TYPE\",\"REACT_RETURN_TYPE\",\"REACT_PORTAL_TYPE\",\"SEPARATOR\",\"getComponentKey\",\"subtreeCount\",\"nextNamePrefix\",\"SUBSEPARATOR\",\"isArray\",\"child\",\"nextName\",\"iteratorFn\",\"ii\",\"entries\",\"didWarnAboutMaps\",\"ReactDebugCurrentFrame\",\"getStackAddendum\",\"iterator\",\"done\",\"step\",\"next\",\"value\",\"addendum\",\"childrenString\",\"invariant\",\"keys\",\"join\",\"component\",\"index\",\"toString\",\"forEachSingleChild\",\"bookKeeping\",\"mapSingleChildIntoContext\",\"childKey\",\"mappedChild\",\"mapIntoWithKeyPrefixInternal\",\"emptyFunction\",\"thatReturnsArgument\",\"userProvidedKeyEscapeRegex\",\"newElement\",\"newKey\",\"array\",\"prefix\",\"escapedPrefix\",\"getComponentName\",\"fiber\",\"getDeclarationErrorAddendum\",\"validateExplicitKey\",\"parentType\",\"_store\",\"validated\",\"info\",\"parentName\",\"ownerHasKeyUseWarning\",\"currentComponentErrorInfo\",\"childOwner\",\"currentlyValidatingElement\",\"validateChildKeys\",\"node\",\"validatePropTypes\",\"componentClass\",\"propTypes\",\"checkPropTypes\",\"PropTypes\",\"propTypesMisspellWarningShown\",\"getDefaultProps\",\"isReactClassApproved\",\"createElementWithValidation\",\"validType\",\"fileName\",\"lineNumber\",\"sourceInfo\",\"apply\",\"REACT_FRAGMENT_TYPE\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_iterator\",\"Symbol\",\"_step\",\"VALID_FRAGMENT_PROPS\",\"has\",\"err\",\"hasSymbol\",\"lowPriorityWarning\",\"printWarning\",\"format\",\"_len\",\"args\",\"_key\",\"argIndex\",\"message\",\"console\",\"warn\",\"Error\",\"x\",\"lowPriorityWarning$1\",\"condition\",\"_len2\",\"_key2\",\"concat\",\"isMounted\",\"enqueueForceUpdate\",\"enqueueReplaceState\",\"completeState\",\"enqueueSetState\",\"partialState\",\"prototype\",\"isReactComponent\",\"setState\",\"Component.prototype.setState\",\"forceUpdate\",\"Component.prototype.forceUpdate\",\"deprecatedAPIs\",\"replaceState\",\"defineDeprecationWarning\",\"methodName\",\"fnName\",\"pureComponentPrototype\",\"isPureReactComponent\",\"asyncComponentPrototype\",\"unstable_isAsyncReactComponent\",\"render\",\"asyncComponentPrototype.render\",\"enumerable\",\"writable\",\"ReactDebugCurrentFrame.getStackAddendum\",\"impl\",\"getCurrentStack\",\"stack\",\"ownerName\",\"Map\",\"React\",\"Children\",\"map\",\"mapChildren\",\"forEach\",\"forEachChildren\",\"forEachFunc\",\"forEachContext\",\"countChildren\",\"thatReturnsNull\",\"toArray\",\"only\",\"onlyChild\",\"unstable_AsyncComponent\",\"Fragment\",\"cloneElementWithValidation\",\"createFactory\",\"createFactoryWithValidation\",\"validatedFactory\",\"bind\",\"version\",\"ReactVersion\",\"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\",\"assign\",\"ReactComponentTreeHook\",\"React$3\",\"React$2\",\"default\",\"react\"]\n}\n"]