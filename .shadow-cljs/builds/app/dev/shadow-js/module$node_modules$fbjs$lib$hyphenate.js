["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/hyphenate.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$hyphenate=function(k,A,f,m,F){var c=/([A-Z])/g;m.exports=function(f){return f.replace(c,\"-$1\").toLowerCase()}}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$hyphenate\"] = function(global,process,require,module,exports) {\n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1519925395368,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$hyphenate.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAY3G,IAAIC,EAAoB,UAkBxBF,EAAAC,QAAA,CAJAE,QAAkB,CAACC,CAAD,CAAS,CACzB,MAAOA,EAAAC,QAAA,CAAeH,CAAf,CAAkC,KAAlC,CAAAI,YAAA,EADkB,CA1BgF;\",\n\"sources\":[\"node_modules/fbjs/lib/hyphenate.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$hyphenate\\\"] = function(global,process,require,module,exports) {\\n'use strict';\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\nvar _uppercasePattern = /([A-Z])/g;\\n\\n/**\\n * Hyphenates a camelcased string, for example:\\n *\\n *   > hyphenate('backgroundColor')\\n *   < \\\"background-color\\\"\\n *\\n * For CSS style names, use `hyphenateStyleName` instead which works properly\\n * with all vendor prefixes, including `ms`.\\n *\\n * @param {string} string\\n * @return {string}\\n */\\nfunction hyphenate(string) {\\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\\n}\\n\\nmodule.exports = hyphenate;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"_uppercasePattern\",\"hyphenate\",\"string\",\"replace\",\"toLowerCase\"]\n}\n"]