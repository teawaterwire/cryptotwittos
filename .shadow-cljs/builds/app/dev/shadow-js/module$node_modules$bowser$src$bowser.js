["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/bowser/src/bowser.js"],"~:js","shadow$provide.module$node_modules$bowser$src$bowser=function(a,c,b,f,e){!function(a,b,c){\"undefined\"!=typeof f&&f.exports?f.exports=c():\"function\"==typeof define&&define.amd?define(b,c):a[b]=c()}(this,\"bowser\",function(){function a(a){function b(b){return(b=a.match(b))&&1<b.length&&b[1]||\"\"}function c(b){return(b=a.match(b))&&1<b.length&&b[2]||\"\"}function d(a){switch(a){case \"NT\":return\"NT\";case \"XP\":return\"XP\";case \"NT 5.0\":return\"2000\";case \"NT 5.1\":return\"XP\";case \"NT 5.2\":return\"2003\";case \"NT 6.0\":return\"Vista\";\ncase \"NT 6.1\":return\"7\";case \"NT 6.2\":return\"8\";case \"NT 6.3\":return\"8.1\";case \"NT 10.0\":return\"10\"}}var e=b(/(ipod|iphone|ipad)/i).toLowerCase(),f=!/like android/i.test(a)&&/android/i.test(a),l=/nexus\\s*[0-6]\\s*/i.test(a),y=!l&&/nexus\\s*[0-9]+/i.test(a),g=/CrOS/.test(a),v=/silk/i.test(a),k=/sailfish/i.test(a),A=/tizen/i.test(a),n=/(web|hpw)os/i.test(a),p=/windows phone/i.test(a);/SamsungBrowser/i.test(a);var w=!p&&/windows/i.test(a),u=!e&&!v&&/macintosh/i.test(a),L=!f&&!k&&!A&&!n&&/linux/i.test(a),\nM=c(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i),K=b(/version\\/(\\d+(\\.\\d+)?)/i),ca=/tablet/i.test(a)&&!/tablet pc/i.test(a),fa=!ca&&/[^-]mobi/i.test(a),X=/xbox/i.test(a);/opera/i.test(a)?g={name:\"Opera\",opera:!0,version:K||b(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/opr\\/|opios/i.test(a)?g={name:\"Opera\",opera:!0,version:b(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)||K}:/SamsungBrowser/i.test(a)?g={name:\"Samsung Internet for Android\",samsungBrowser:!0,version:K||b(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/coast/i.test(a)?\ng={name:\"Opera Coast\",coast:!0,version:K||b(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/yabrowser/i.test(a)?g={name:\"Yandex Browser\",yandexbrowser:!0,version:K||b(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/ucbrowser/i.test(a)?g={name:\"UC Browser\",ucbrowser:!0,version:b(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/mxios/i.test(a)?g={name:\"Maxthon\",maxthon:!0,version:b(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/epiphany/i.test(a)?g={name:\"Epiphany\",epiphany:!0,version:b(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/puffin/i.test(a)?\ng={name:\"Puffin\",puffin:!0,version:b(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)}:/sleipnir/i.test(a)?g={name:\"Sleipnir\",sleipnir:!0,version:b(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/k-meleon/i.test(a)?g={name:\"K-Meleon\",kMeleon:!0,version:b(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:p?(g={name:\"Windows Phone\",osname:\"Windows Phone\",windowsphone:!0},M?(g.msedge=!0,g.version=M):(g.msie=!0,g.version=b(/iemobile\\/(\\d+(\\.\\d+)?)/i))):/msie|trident/i.test(a)?g={name:\"Internet Explorer\",msie:!0,version:b(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)}:\ng?g={name:\"Chrome\",osname:\"Chrome OS\",chromeos:!0,chromeBook:!0,chrome:!0,version:b(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)}:/edg([ea]|ios)/i.test(a)?g={name:\"Microsoft Edge\",msedge:!0,version:M}:/vivaldi/i.test(a)?g={name:\"Vivaldi\",vivaldi:!0,version:b(/vivaldi\\/(\\d+(\\.\\d+)?)/i)||K}:k?g={name:\"Sailfish\",osname:\"Sailfish OS\",sailfish:!0,version:b(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)}:/seamonkey\\//i.test(a)?g={name:\"SeaMonkey\",seamonkey:!0,version:b(/seamonkey\\/(\\d+(\\.\\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(a)?\n(g={name:\"Firefox\",firefox:!0,version:b(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)},/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(a)&&(g.firefoxos=!0,g.osname=\"Firefox OS\")):v?g={name:\"Amazon Silk\",silk:!0,version:b(/silk\\/(\\d+(\\.\\d+)?)/i)}:/phantom/i.test(a)?g={name:\"PhantomJS\",phantom:!0,version:b(/phantomjs\\/(\\d+(\\.\\d+)?)/i)}:/slimerjs/i.test(a)?g={name:\"SlimerJS\",slimer:!0,version:b(/slimerjs\\/(\\d+(\\.\\d+)?)/i)}:/blackberry|\\bbb\\d+/i.test(a)||/rim\\stablet/i.test(a)?g={name:\"BlackBerry\",osname:\"BlackBerry OS\",\nblackberry:!0,version:K||b(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)}:n?(g={name:\"WebOS\",osname:\"WebOS\",webos:!0,version:K||b(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)},/touchpad\\//i.test(a)&&(g.touchpad=!0)):/bada/i.test(a)?g={name:\"Bada\",osname:\"Bada\",bada:!0,version:b(/dolfin\\/(\\d+(\\.\\d+)?)/i)}:A?g={name:\"Tizen\",osname:\"Tizen\",tizen:!0,version:b(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i)||K}:/qupzilla/i.test(a)?g={name:\"QupZilla\",qupzilla:!0,version:b(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i)||K}:/chromium/i.test(a)?\ng={name:\"Chromium\",chromium:!0,version:b(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i)||K}:/chrome|crios|crmo/i.test(a)?g={name:\"Chrome\",chrome:!0,version:b(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)}:f?g={name:\"Android\",version:K}:/safari|applewebkit/i.test(a)?(g={name:\"Safari\",safari:!0},K&&(g.version=K)):e?(g={name:\"iphone\"==e?\"iPhone\":\"ipad\"==e?\"iPad\":\"iPod\"},K&&(g.version=K)):g=/googlebot/i.test(a)?{name:\"Googlebot\",googlebot:!0,version:b(/googlebot\\/(\\d+(\\.\\d+))/i)||K}:{name:b(/^(.*)\\/(.*) /),version:c(/^(.*)\\/(.*) /)};\n!g.msedge&&/(apple)?webkit/i.test(a)?(/(apple)?webkit\\/537\\.36/i.test(a)?(g.name=g.name||\"Blink\",g.blink=!0):(g.name=g.name||\"Webkit\",g.webkit=!0),!g.version&&K&&(g.version=K)):!g.opera&&/gecko\\//i.test(a)&&(g.name=g.name||\"Gecko\",g.gecko=!0,g.version=g.version||b(/gecko\\/(\\d+(\\.\\d+)?)/i));g.windowsphone||!f&&!g.silk?!g.windowsphone&&e?(g[e]=!0,g.ios=!0,g.osname=\"iOS\"):u?(g.mac=!0,g.osname=\"macOS\"):X?(g.xbox=!0,g.osname=\"Xbox\"):w?(g.windows=!0,g.osname=\"Windows\"):L&&(g.linux=!0,g.osname=\"Linux\"):\n(g.android=!0,g.osname=\"Android\");w=\"\";g.windows?w=d(b(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i)):g.windowsphone?w=b(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i):g.mac?(w=b(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i),w=w.replace(/[_\\s]/g,\".\")):e?(w=b(/os (\\d+([_\\s]\\d+)*) like mac os x/i),w=w.replace(/[_\\s]/g,\".\")):f?w=b(/android[ \\/-](\\d+(\\.\\d+)*)/i):g.webos?w=b(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i):g.blackberry?w=b(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i):g.bada?w=b(/bada\\/(\\d+(\\.\\d+)*)/i):g.tizen&&(w=b(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i));\nw&&(g.osversion=w);w=!g.windows&&w.split(\".\")[0];if(ca||y||\"ipad\"==e||f&&(3==w||4<=w&&!fa)||g.silk)g.tablet=!0;else if(fa||\"iphone\"==e||\"ipod\"==e||f||l||g.blackberry||g.webos||g.bada)g.mobile=!0;g.msedge||g.msie&&10<=g.version||g.yandexbrowser&&15<=g.version||g.vivaldi&&1<=g.version||g.chrome&&20<=g.version||g.samsungBrowser&&4<=g.version||g.firefox&&20<=g.version||g.safari&&6<=g.version||g.opera&&10<=g.version||g.ios&&g.osversion&&6<=g.osversion.split(\".\")[0]||g.blackberry&&10.1<=g.version||g.chromium&&\n20<=g.version?g.a=!0:g.msie&&10>g.version||g.chrome&&20>g.version||g.firefox&&20>g.version||g.safari&&6>g.version||g.opera&&10>g.version||g.ios&&g.osversion&&6>g.osversion.split(\".\")[0]||g.chromium&&20>g.version?g.c=!0:g.x=!0;return g}function b(a,b){var c=[],d;if(Array.prototype.map)return Array.prototype.map.call(a,b);for(d=0;d<a.length;d++)c.push(b(a[d]));return c}function c(a){var c=Math.max(a[0].split(\".\").length,a[1].split(\".\").length);for(a=b(a,function(a){var d=c-a.split(\".\").length;a+=Array(d+\n1).join(\".0\");return b(a.split(\".\"),function(a){return Array(20-a.length).join(\"0\")+a}).reverse()});0<=--c;){if(a[0][c]>a[1][c])return 1;if(a[0][c]===a[1][c]){if(0===c)return 0}else return-1}}function e(b,d,e){var k=f;\"string\"===typeof d&&(e=d,d=void 0);void 0===d&&(d=!1);e&&(k=a(e));e=\"\"+k.version;for(var h in b)if(b.hasOwnProperty(h)&&k[h]){if(\"string\"!==typeof b[h])throw Error(\"Browser version in the minVersion map should be a string: \"+h+\": \"+String(b));return 0>c([e,b[h]])}return d}var f=a(\"undefined\"!==\ntypeof navigator?navigator.userAgent||\"\":\"\");f.test=function(a){for(var b=0;b<a.length;++b){var c=a[b];if(\"string\"===typeof c&&c in f)return!0}return!1};f.isUnsupportedBrowser=e;f.compareVersions=c;f.check=function(a,b,c){return!e(a,b,c)};f._detect=a;f.detect=a;return f})}","~:source","shadow$provide[\"module$node_modules$bowser$src$bowser\"] = function(global,process,require,module,exports) {\n/*!\n * Bowser - a browser detector\n * https://github.com/ded/bowser\n * MIT License | (c) Dustin Diaz 2015\n */\n\n!function (root, name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(name, definition)\n  else root[name] = definition()\n}(this, 'bowser', function () {\n  /**\n    * See useragents.js for examples of navigator.userAgent\n    */\n\n  var t = true\n\n  function detect(ua) {\n\n    function getFirstMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[1]) || '';\n    }\n\n    function getSecondMatch(regex) {\n      var match = ua.match(regex);\n      return (match && match.length > 1 && match[2]) || '';\n    }\n\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\n      , likeAndroid = /like android/i.test(ua)\n      , android = !likeAndroid && /android/i.test(ua)\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\n      , chromeos = /CrOS/.test(ua)\n      , silk = /silk/i.test(ua)\n      , sailfish = /sailfish/i.test(ua)\n      , tizen = /tizen/i.test(ua)\n      , webos = /(web|hpw)os/i.test(ua)\n      , windowsphone = /windows phone/i.test(ua)\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\n      , windows = !windowsphone && /windows/i.test(ua)\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i)\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\n      , xbox = /xbox/i.test(ua)\n      , result\n\n    if (/opera/i.test(ua)) {\n      //  an old Opera\n      result = {\n        name: 'Opera'\n      , opera: t\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/opr\\/|opios/i.test(ua)) {\n      // a new Opera\n      result = {\n        name: 'Opera'\n        , opera: t\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/SamsungBrowser/i.test(ua)) {\n      result = {\n        name: 'Samsung Internet for Android'\n        , samsungBrowser: t\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/coast/i.test(ua)) {\n      result = {\n        name: 'Opera Coast'\n        , coast: t\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/yabrowser/i.test(ua)) {\n      result = {\n        name: 'Yandex Browser'\n      , yandexbrowser: t\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/ucbrowser/i.test(ua)) {\n      result = {\n          name: 'UC Browser'\n        , ucbrowser: t\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/mxios/i.test(ua)) {\n      result = {\n        name: 'Maxthon'\n        , maxthon: t\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/epiphany/i.test(ua)) {\n      result = {\n        name: 'Epiphany'\n        , epiphany: t\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/puffin/i.test(ua)) {\n      result = {\n        name: 'Puffin'\n        , puffin: t\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\n      }\n    }\n    else if (/sleipnir/i.test(ua)) {\n      result = {\n        name: 'Sleipnir'\n        , sleipnir: t\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (/k-meleon/i.test(ua)) {\n      result = {\n        name: 'K-Meleon'\n        , kMeleon: t\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\n      }\n    }\n    else if (windowsphone) {\n      result = {\n        name: 'Windows Phone'\n      , osname: 'Windows Phone'\n      , windowsphone: t\n      }\n      if (edgeVersion) {\n        result.msedge = t\n        result.version = edgeVersion\n      }\n      else {\n        result.msie = t\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/msie|trident/i.test(ua)) {\n      result = {\n        name: 'Internet Explorer'\n      , msie: t\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (chromeos) {\n      result = {\n        name: 'Chrome'\n      , osname: 'Chrome OS'\n      , chromeos: t\n      , chromeBook: t\n      , chrome: t\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    } else if (/edg([ea]|ios)/i.test(ua)) {\n      result = {\n        name: 'Microsoft Edge'\n      , msedge: t\n      , version: edgeVersion\n      }\n    }\n    else if (/vivaldi/i.test(ua)) {\n      result = {\n        name: 'Vivaldi'\n        , vivaldi: t\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (sailfish) {\n      result = {\n        name: 'Sailfish'\n      , osname: 'Sailfish OS'\n      , sailfish: t\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/seamonkey\\//i.test(ua)) {\n      result = {\n        name: 'SeaMonkey'\n      , seamonkey: t\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\n      result = {\n        name: 'Firefox'\n      , firefox: t\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\n      }\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\n        result.firefoxos = t\n        result.osname = 'Firefox OS'\n      }\n    }\n    else if (silk) {\n      result =  {\n        name: 'Amazon Silk'\n      , silk: t\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/phantom/i.test(ua)) {\n      result = {\n        name: 'PhantomJS'\n      , phantom: t\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/slimerjs/i.test(ua)) {\n      result = {\n        name: 'SlimerJS'\n        , slimer: t\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\n      result = {\n        name: 'BlackBerry'\n      , osname: 'BlackBerry OS'\n      , blackberry: t\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (webos) {\n      result = {\n        name: 'WebOS'\n      , osname: 'WebOS'\n      , webos: t\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\n      };\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\n    }\n    else if (/bada/i.test(ua)) {\n      result = {\n        name: 'Bada'\n      , osname: 'Bada'\n      , bada: t\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\n      };\n    }\n    else if (tizen) {\n      result = {\n        name: 'Tizen'\n      , osname: 'Tizen'\n      , tizen: t\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\n      };\n    }\n    else if (/qupzilla/i.test(ua)) {\n      result = {\n        name: 'QupZilla'\n        , qupzilla: t\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\n      }\n    }\n    else if (/chromium/i.test(ua)) {\n      result = {\n        name: 'Chromium'\n        , chromium: t\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\n      }\n    }\n    else if (/chrome|crios|crmo/i.test(ua)) {\n      result = {\n        name: 'Chrome'\n        , chrome: t\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\n      }\n    }\n    else if (android) {\n      result = {\n        name: 'Android'\n        , version: versionIdentifier\n      }\n    }\n    else if (/safari|applewebkit/i.test(ua)) {\n      result = {\n        name: 'Safari'\n      , safari: t\n      }\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if (iosdevice) {\n      result = {\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\n      }\n      // WTF: version is not part of user agent in web apps\n      if (versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    }\n    else if(/googlebot/i.test(ua)) {\n      result = {\n        name: 'Googlebot'\n      , googlebot: t\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\n      }\n    }\n    else {\n      result = {\n        name: getFirstMatch(/^(.*)\\/(.*) /),\n        version: getSecondMatch(/^(.*)\\/(.*) /)\n     };\n   }\n\n    // set webkit or gecko flag for browsers based on these engines\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\n        result.name = result.name || \"Blink\"\n        result.blink = t\n      } else {\n        result.name = result.name || \"Webkit\"\n        result.webkit = t\n      }\n      if (!result.version && versionIdentifier) {\n        result.version = versionIdentifier\n      }\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\n      result.name = result.name || \"Gecko\"\n      result.gecko = t\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\n    }\n\n    // set OS flags for platforms that have multiple browsers\n    if (!result.windowsphone && (android || result.silk)) {\n      result.android = t\n      result.osname = 'Android'\n    } else if (!result.windowsphone && iosdevice) {\n      result[iosdevice] = t\n      result.ios = t\n      result.osname = 'iOS'\n    } else if (mac) {\n      result.mac = t\n      result.osname = 'macOS'\n    } else if (xbox) {\n      result.xbox = t\n      result.osname = 'Xbox'\n    } else if (windows) {\n      result.windows = t\n      result.osname = 'Windows'\n    } else if (linux) {\n      result.linux = t\n      result.osname = 'Linux'\n    }\n\n    function getWindowsVersion (s) {\n      switch (s) {\n        case 'NT': return 'NT'\n        case 'XP': return 'XP'\n        case 'NT 5.0': return '2000'\n        case 'NT 5.1': return 'XP'\n        case 'NT 5.2': return '2003'\n        case 'NT 6.0': return 'Vista'\n        case 'NT 6.1': return '7'\n        case 'NT 6.2': return '8'\n        case 'NT 6.3': return '8.1'\n        case 'NT 10.0': return '10'\n        default: return undefined\n      }\n    }\n\n    // OS version extraction\n    var osVersion = '';\n    if (result.windows) {\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i))\n    } else if (result.windowsphone) {\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\n    } else if (result.mac) {\n      osVersion = getFirstMatch(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (iosdevice) {\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\n    } else if (android) {\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\n    } else if (result.webos) {\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.blackberry) {\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\n    } else if (result.bada) {\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\n    } else if (result.tizen) {\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\n    }\n    if (osVersion) {\n      result.osversion = osVersion;\n    }\n\n    // device type extraction\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\n    if (\n         tablet\n      || nexusTablet\n      || iosdevice == 'ipad'\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\n      || result.silk\n    ) {\n      result.tablet = t\n    } else if (\n         mobile\n      || iosdevice == 'iphone'\n      || iosdevice == 'ipod'\n      || android\n      || nexusMobile\n      || result.blackberry\n      || result.webos\n      || result.bada\n    ) {\n      result.mobile = t\n    }\n\n    // Graded Browser Support\n    // http://developer.yahoo.com/yui/articles/gbs\n    if (result.msedge ||\n        (result.msie && result.version >= 10) ||\n        (result.yandexbrowser && result.version >= 15) ||\n\t\t    (result.vivaldi && result.version >= 1.0) ||\n        (result.chrome && result.version >= 20) ||\n        (result.samsungBrowser && result.version >= 4) ||\n        (result.firefox && result.version >= 20.0) ||\n        (result.safari && result.version >= 6) ||\n        (result.opera && result.version >= 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\n        (result.blackberry && result.version >= 10.1)\n        || (result.chromium && result.version >= 20)\n        ) {\n      result.a = t;\n    }\n    else if ((result.msie && result.version < 10) ||\n        (result.chrome && result.version < 20) ||\n        (result.firefox && result.version < 20.0) ||\n        (result.safari && result.version < 6) ||\n        (result.opera && result.version < 10.0) ||\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\n        || (result.chromium && result.version < 20)\n        ) {\n      result.c = t\n    } else result.x = t\n\n    return result\n  }\n\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\n\n  bowser.test = function (browserList) {\n    for (var i = 0; i < browserList.length; ++i) {\n      var browserItem = browserList[i];\n      if (typeof browserItem=== 'string') {\n        if (browserItem in bowser) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  function getVersionPrecision(version) {\n    return version.split(\".\").length;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  function map(arr, iterator) {\n    var result = [], i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i++) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\n   *\n   * @param  {Array<String>} versions versions to compare\n   * @return {Number} comparison result\n   */\n  function compareVersions(versions) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\n    var chunks = map(versions, function (version) {\n      var delta = precision - getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      version = version + new Array(delta + 1).join(\".0\");\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return map(version.split(\".\"), function (chunk) {\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\n      }).reverse();\n    });\n\n    // iterate in reverse order by reversed chunks array\n    while (--precision >= 0) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n      else if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === 0) {\n          // all version chunks are same\n          return 0;\n        }\n      }\n      else {\n        return -1;\n      }\n    }\n  }\n\n  /**\n   * Check if browser is unsupported\n   *\n   * @example\n   *   bowser.isUnsupportedBrowser({\n   *     msie: \"10\",\n   *     firefox: \"23\",\n   *     chrome: \"29\",\n   *     safari: \"5.1\",\n   *     opera: \"16\",\n   *     phantom: \"534\"\n   *   });\n   *\n   * @param  {Object}  minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\n    var _bowser = bowser;\n\n    // make strictMode param optional with ua param usage\n    if (typeof strictMode === 'string') {\n      ua = strictMode;\n      strictMode = void(0);\n    }\n\n    if (strictMode === void(0)) {\n      strictMode = false;\n    }\n    if (ua) {\n      _bowser = detect(ua);\n    }\n\n    var version = \"\" + _bowser.version;\n    for (var browser in minVersions) {\n      if (minVersions.hasOwnProperty(browser)) {\n        if (_bowser[browser]) {\n          if (typeof minVersions[browser] !== 'string') {\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\n          }\n\n          // browser version and min supported version.\n          return compareVersions([version, minVersions[browser]]) < 0;\n        }\n      }\n    }\n\n    return strictMode; // not found\n  }\n\n  /**\n   * Check if browser is supported\n   *\n   * @param  {Object} minVersions map of minimal version to browser\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\n   * @param  {String}  [ua] user agent string\n   * @return {Boolean}\n   */\n  function check(minVersions, strictMode, ua) {\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\n  }\n\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\n  bowser.compareVersions = compareVersions;\n  bowser.check = check;\n\n  /*\n   * Set our detect method to the main bowser object so we can\n   * reuse it to test other user agents.\n   * This is needed to implement future tests.\n   */\n  bowser._detect = detect;\n\n  /*\n   * Set our detect public method to the main bowser object\n   * This is needed to implement bowser in server side\n   */\n  bowser.detect = detect;\n  return bowser\n});\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["mac","touchpad","webkit","windowsphone","blackberry","opera","ucbrowser","webos","kMeleon","isUnsupportedBrowser","_detect","chromeos","osname","yandexbrowser","x","samsungBrowser","tablet","linux","compareVersions","detect","msie","qupzilla","name","phantom","check","firefox","sailfish","googlebot","chromium","safari","epiphany","bada","a","tizen","vivaldi","msedge","windows","slimer","puffin","maxthon","chrome","version","seamonkey","blink","mobile","ios","firefoxos","chromeBook","xbox","gecko","sleipnir","coast","silk","c","android","test","osversion"]],"~:compiled-at",1519979268756,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$bowser$src$bowser.js\",\n\"lineCount\":15,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/bowser/src/bowser.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$bowser$src$bowser\\\"] = function(global,process,require,module,exports) {\\n/*!\\n * Bowser - a browser detector\\n * https://github.com/ded/bowser\\n * MIT License | (c) Dustin Diaz 2015\\n */\\n\\n!function (root, name, definition) {\\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\\n  else if (typeof define == 'function' && define.amd) define(name, definition)\\n  else root[name] = definition()\\n}(this, 'bowser', function () {\\n  /**\\n    * See useragents.js for examples of navigator.userAgent\\n    */\\n\\n  var t = true\\n\\n  function detect(ua) {\\n\\n    function getFirstMatch(regex) {\\n      var match = ua.match(regex);\\n      return (match && match.length > 1 && match[1]) || '';\\n    }\\n\\n    function getSecondMatch(regex) {\\n      var match = ua.match(regex);\\n      return (match && match.length > 1 && match[2]) || '';\\n    }\\n\\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\\n      , likeAndroid = /like android/i.test(ua)\\n      , android = !likeAndroid && /android/i.test(ua)\\n      , nexusMobile = /nexus\\\\s*[0-6]\\\\s*/i.test(ua)\\n      , nexusTablet = !nexusMobile && /nexus\\\\s*[0-9]+/i.test(ua)\\n      , chromeos = /CrOS/.test(ua)\\n      , silk = /silk/i.test(ua)\\n      , sailfish = /sailfish/i.test(ua)\\n      , tizen = /tizen/i.test(ua)\\n      , webos = /(web|hpw)os/i.test(ua)\\n      , windowsphone = /windows phone/i.test(ua)\\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\\n      , windows = !windowsphone && /windows/i.test(ua)\\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      , versionIdentifier = getFirstMatch(/version\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\\n      , xbox = /xbox/i.test(ua)\\n      , result\\n\\n    if (/opera/i.test(ua)) {\\n      //  an old Opera\\n      result = {\\n        name: 'Opera'\\n      , opera: t\\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (/opr\\\\/|opios/i.test(ua)) {\\n      // a new Opera\\n      result = {\\n        name: 'Opera'\\n        , opera: t\\n        , version: getFirstMatch(/(?:opr|opios)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/SamsungBrowser/i.test(ua)) {\\n      result = {\\n        name: 'Samsung Internet for Android'\\n        , samsungBrowser: t\\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/coast/i.test(ua)) {\\n      result = {\\n        name: 'Opera Coast'\\n        , coast: t\\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/yabrowser/i.test(ua)) {\\n      result = {\\n        name: 'Yandex Browser'\\n      , yandexbrowser: t\\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/ucbrowser/i.test(ua)) {\\n      result = {\\n          name: 'UC Browser'\\n        , ucbrowser: t\\n        , version: getFirstMatch(/(?:ucbrowser)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/mxios/i.test(ua)) {\\n      result = {\\n        name: 'Maxthon'\\n        , maxthon: t\\n        , version: getFirstMatch(/(?:mxios)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/epiphany/i.test(ua)) {\\n      result = {\\n        name: 'Epiphany'\\n        , epiphany: t\\n        , version: getFirstMatch(/(?:epiphany)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/puffin/i.test(ua)) {\\n      result = {\\n        name: 'Puffin'\\n        , puffin: t\\n        , version: getFirstMatch(/(?:puffin)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/sleipnir/i.test(ua)) {\\n      result = {\\n        name: 'Sleipnir'\\n        , sleipnir: t\\n        , version: getFirstMatch(/(?:sleipnir)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/k-meleon/i.test(ua)) {\\n      result = {\\n        name: 'K-Meleon'\\n        , kMeleon: t\\n        , version: getFirstMatch(/(?:k-meleon)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (windowsphone) {\\n      result = {\\n        name: 'Windows Phone'\\n      , osname: 'Windows Phone'\\n      , windowsphone: t\\n      }\\n      if (edgeVersion) {\\n        result.msedge = t\\n        result.version = edgeVersion\\n      }\\n      else {\\n        result.msie = t\\n        result.version = getFirstMatch(/iemobile\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/msie|trident/i.test(ua)) {\\n      result = {\\n        name: 'Internet Explorer'\\n      , msie: t\\n      , version: getFirstMatch(/(?:msie |rv:)(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (chromeos) {\\n      result = {\\n        name: 'Chrome'\\n      , osname: 'Chrome OS'\\n      , chromeos: t\\n      , chromeBook: t\\n      , chrome: t\\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (/edg([ea]|ios)/i.test(ua)) {\\n      result = {\\n        name: 'Microsoft Edge'\\n      , msedge: t\\n      , version: edgeVersion\\n      }\\n    }\\n    else if (/vivaldi/i.test(ua)) {\\n      result = {\\n        name: 'Vivaldi'\\n        , vivaldi: t\\n        , version: getFirstMatch(/vivaldi\\\\/(\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (sailfish) {\\n      result = {\\n        name: 'Sailfish'\\n      , osname: 'Sailfish OS'\\n      , sailfish: t\\n      , version: getFirstMatch(/sailfish\\\\s?browser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/seamonkey\\\\//i.test(ua)) {\\n      result = {\\n        name: 'SeaMonkey'\\n      , seamonkey: t\\n      , version: getFirstMatch(/seamonkey\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\\n      result = {\\n        name: 'Firefox'\\n      , firefox: t\\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n      if (/\\\\((mobile|tablet);[^\\\\)]*rv:[\\\\d\\\\.]+\\\\)/i.test(ua)) {\\n        result.firefoxos = t\\n        result.osname = 'Firefox OS'\\n      }\\n    }\\n    else if (silk) {\\n      result =  {\\n        name: 'Amazon Silk'\\n      , silk: t\\n      , version : getFirstMatch(/silk\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/phantom/i.test(ua)) {\\n      result = {\\n        name: 'PhantomJS'\\n      , phantom: t\\n      , version: getFirstMatch(/phantomjs\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/slimerjs/i.test(ua)) {\\n      result = {\\n        name: 'SlimerJS'\\n        , slimer: t\\n        , version: getFirstMatch(/slimerjs\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/blackberry|\\\\bbb\\\\d+/i.test(ua) || /rim\\\\stablet/i.test(ua)) {\\n      result = {\\n        name: 'BlackBerry'\\n      , osname: 'BlackBerry OS'\\n      , blackberry: t\\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\\\d]+\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (webos) {\\n      result = {\\n        name: 'WebOS'\\n      , osname: 'WebOS'\\n      , webos: t\\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      };\\n      /touchpad\\\\//i.test(ua) && (result.touchpad = t)\\n    }\\n    else if (/bada/i.test(ua)) {\\n      result = {\\n        name: 'Bada'\\n      , osname: 'Bada'\\n      , bada: t\\n      , version: getFirstMatch(/dolfin\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      };\\n    }\\n    else if (tizen) {\\n      result = {\\n        name: 'Tizen'\\n      , osname: 'Tizen'\\n      , tizen: t\\n      , version: getFirstMatch(/(?:tizen\\\\s?)?browser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      };\\n    }\\n    else if (/qupzilla/i.test(ua)) {\\n      result = {\\n        name: 'QupZilla'\\n        , qupzilla: t\\n        , version: getFirstMatch(/(?:qupzilla)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/chromium/i.test(ua)) {\\n      result = {\\n        name: 'Chromium'\\n        , chromium: t\\n        , version: getFirstMatch(/(?:chromium)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/chrome|crios|crmo/i.test(ua)) {\\n      result = {\\n        name: 'Chrome'\\n        , chrome: t\\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (android) {\\n      result = {\\n        name: 'Android'\\n        , version: versionIdentifier\\n      }\\n    }\\n    else if (/safari|applewebkit/i.test(ua)) {\\n      result = {\\n        name: 'Safari'\\n      , safari: t\\n      }\\n      if (versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    }\\n    else if (iosdevice) {\\n      result = {\\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\\n      }\\n      // WTF: version is not part of user agent in web apps\\n      if (versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    }\\n    else if(/googlebot/i.test(ua)) {\\n      result = {\\n        name: 'Googlebot'\\n      , googlebot: t\\n      , version: getFirstMatch(/googlebot\\\\/(\\\\d+(\\\\.\\\\d+))/i) || versionIdentifier\\n      }\\n    }\\n    else {\\n      result = {\\n        name: getFirstMatch(/^(.*)\\\\/(.*) /),\\n        version: getSecondMatch(/^(.*)\\\\/(.*) /)\\n     };\\n   }\\n\\n    // set webkit or gecko flag for browsers based on these engines\\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\\n      if (/(apple)?webkit\\\\/537\\\\.36/i.test(ua)) {\\n        result.name = result.name || \\\"Blink\\\"\\n        result.blink = t\\n      } else {\\n        result.name = result.name || \\\"Webkit\\\"\\n        result.webkit = t\\n      }\\n      if (!result.version && versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    } else if (!result.opera && /gecko\\\\//i.test(ua)) {\\n      result.name = result.name || \\\"Gecko\\\"\\n      result.gecko = t\\n      result.version = result.version || getFirstMatch(/gecko\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n    }\\n\\n    // set OS flags for platforms that have multiple browsers\\n    if (!result.windowsphone && (android || result.silk)) {\\n      result.android = t\\n      result.osname = 'Android'\\n    } else if (!result.windowsphone && iosdevice) {\\n      result[iosdevice] = t\\n      result.ios = t\\n      result.osname = 'iOS'\\n    } else if (mac) {\\n      result.mac = t\\n      result.osname = 'macOS'\\n    } else if (xbox) {\\n      result.xbox = t\\n      result.osname = 'Xbox'\\n    } else if (windows) {\\n      result.windows = t\\n      result.osname = 'Windows'\\n    } else if (linux) {\\n      result.linux = t\\n      result.osname = 'Linux'\\n    }\\n\\n    function getWindowsVersion (s) {\\n      switch (s) {\\n        case 'NT': return 'NT'\\n        case 'XP': return 'XP'\\n        case 'NT 5.0': return '2000'\\n        case 'NT 5.1': return 'XP'\\n        case 'NT 5.2': return '2003'\\n        case 'NT 6.0': return 'Vista'\\n        case 'NT 6.1': return '7'\\n        case 'NT 6.2': return '8'\\n        case 'NT 6.3': return '8.1'\\n        case 'NT 10.0': return '10'\\n        default: return undefined\\n      }\\n    }\\n\\n    // OS version extraction\\n    var osVersion = '';\\n    if (result.windows) {\\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\\\d\\\\d?.\\\\d)?)/i))\\n    } else if (result.windowsphone) {\\n      osVersion = getFirstMatch(/windows phone (?:os)?\\\\s?(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.mac) {\\n      osVersion = getFirstMatch(/Mac OS X (\\\\d+([_\\\\.\\\\s]\\\\d+)*)/i);\\n      osVersion = osVersion.replace(/[_\\\\s]/g, '.');\\n    } else if (iosdevice) {\\n      osVersion = getFirstMatch(/os (\\\\d+([_\\\\s]\\\\d+)*) like mac os x/i);\\n      osVersion = osVersion.replace(/[_\\\\s]/g, '.');\\n    } else if (android) {\\n      osVersion = getFirstMatch(/android[ \\\\/-](\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.webos) {\\n      osVersion = getFirstMatch(/(?:web|hpw)os\\\\/(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.blackberry) {\\n      osVersion = getFirstMatch(/rim\\\\stablet\\\\sos\\\\s(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.bada) {\\n      osVersion = getFirstMatch(/bada\\\\/(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.tizen) {\\n      osVersion = getFirstMatch(/tizen[\\\\/\\\\s](\\\\d+(\\\\.\\\\d+)*)/i);\\n    }\\n    if (osVersion) {\\n      result.osversion = osVersion;\\n    }\\n\\n    // device type extraction\\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\\n    if (\\n         tablet\\n      || nexusTablet\\n      || iosdevice == 'ipad'\\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\\n      || result.silk\\n    ) {\\n      result.tablet = t\\n    } else if (\\n         mobile\\n      || iosdevice == 'iphone'\\n      || iosdevice == 'ipod'\\n      || android\\n      || nexusMobile\\n      || result.blackberry\\n      || result.webos\\n      || result.bada\\n    ) {\\n      result.mobile = t\\n    }\\n\\n    // Graded Browser Support\\n    // http://developer.yahoo.com/yui/articles/gbs\\n    if (result.msedge ||\\n        (result.msie && result.version >= 10) ||\\n        (result.yandexbrowser && result.version >= 15) ||\\n\\t\\t    (result.vivaldi && result.version >= 1.0) ||\\n        (result.chrome && result.version >= 20) ||\\n        (result.samsungBrowser && result.version >= 4) ||\\n        (result.firefox && result.version >= 20.0) ||\\n        (result.safari && result.version >= 6) ||\\n        (result.opera && result.version >= 10.0) ||\\n        (result.ios && result.osversion && result.osversion.split(\\\".\\\")[0] >= 6) ||\\n        (result.blackberry && result.version >= 10.1)\\n        || (result.chromium && result.version >= 20)\\n        ) {\\n      result.a = t;\\n    }\\n    else if ((result.msie && result.version < 10) ||\\n        (result.chrome && result.version < 20) ||\\n        (result.firefox && result.version < 20.0) ||\\n        (result.safari && result.version < 6) ||\\n        (result.opera && result.version < 10.0) ||\\n        (result.ios && result.osversion && result.osversion.split(\\\".\\\")[0] < 6)\\n        || (result.chromium && result.version < 20)\\n        ) {\\n      result.c = t\\n    } else result.x = t\\n\\n    return result\\n  }\\n\\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\\n\\n  bowser.test = function (browserList) {\\n    for (var i = 0; i < browserList.length; ++i) {\\n      var browserItem = browserList[i];\\n      if (typeof browserItem=== 'string') {\\n        if (browserItem in bowser) {\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * Get version precisions count\\n   *\\n   * @example\\n   *   getVersionPrecision(\\\"1.10.3\\\") // 3\\n   *\\n   * @param  {string} version\\n   * @return {number}\\n   */\\n  function getVersionPrecision(version) {\\n    return version.split(\\\".\\\").length;\\n  }\\n\\n  /**\\n   * Array::map polyfill\\n   *\\n   * @param  {Array} arr\\n   * @param  {Function} iterator\\n   * @return {Array}\\n   */\\n  function map(arr, iterator) {\\n    var result = [], i;\\n    if (Array.prototype.map) {\\n      return Array.prototype.map.call(arr, iterator);\\n    }\\n    for (i = 0; i < arr.length; i++) {\\n      result.push(iterator(arr[i]));\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Calculate browser version weight\\n   *\\n   * @example\\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\\n   *\\n   * @param  {Array<String>} versions versions to compare\\n   * @return {Number} comparison result\\n   */\\n  function compareVersions(versions) {\\n    // 1) get common precision for both versions, for example for \\\"10.0\\\" and \\\"9\\\" it should be 2\\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\\n    var chunks = map(versions, function (version) {\\n      var delta = precision - getVersionPrecision(version);\\n\\n      // 2) \\\"9\\\" -> \\\"9.0\\\" (for precision = 2)\\n      version = version + new Array(delta + 1).join(\\\".0\\\");\\n\\n      // 3) \\\"9.0\\\" -> [\\\"000000000\\\"\\\", \\\"000000009\\\"]\\n      return map(version.split(\\\".\\\"), function (chunk) {\\n        return new Array(20 - chunk.length).join(\\\"0\\\") + chunk;\\n      }).reverse();\\n    });\\n\\n    // iterate in reverse order by reversed chunks array\\n    while (--precision >= 0) {\\n      // 4) compare: \\\"000000009\\\" > \\\"000000010\\\" = false (but \\\"9\\\" > \\\"10\\\" = true)\\n      if (chunks[0][precision] > chunks[1][precision]) {\\n        return 1;\\n      }\\n      else if (chunks[0][precision] === chunks[1][precision]) {\\n        if (precision === 0) {\\n          // all version chunks are same\\n          return 0;\\n        }\\n      }\\n      else {\\n        return -1;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Check if browser is unsupported\\n   *\\n   * @example\\n   *   bowser.isUnsupportedBrowser({\\n   *     msie: \\\"10\\\",\\n   *     firefox: \\\"23\\\",\\n   *     chrome: \\\"29\\\",\\n   *     safari: \\\"5.1\\\",\\n   *     opera: \\\"16\\\",\\n   *     phantom: \\\"534\\\"\\n   *   });\\n   *\\n   * @param  {Object}  minVersions map of minimal version to browser\\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\\n   * @param  {String}  [ua] user agent string\\n   * @return {Boolean}\\n   */\\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\\n    var _bowser = bowser;\\n\\n    // make strictMode param optional with ua param usage\\n    if (typeof strictMode === 'string') {\\n      ua = strictMode;\\n      strictMode = void(0);\\n    }\\n\\n    if (strictMode === void(0)) {\\n      strictMode = false;\\n    }\\n    if (ua) {\\n      _bowser = detect(ua);\\n    }\\n\\n    var version = \\\"\\\" + _bowser.version;\\n    for (var browser in minVersions) {\\n      if (minVersions.hasOwnProperty(browser)) {\\n        if (_bowser[browser]) {\\n          if (typeof minVersions[browser] !== 'string') {\\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\\n          }\\n\\n          // browser version and min supported version.\\n          return compareVersions([version, minVersions[browser]]) < 0;\\n        }\\n      }\\n    }\\n\\n    return strictMode; // not found\\n  }\\n\\n  /**\\n   * Check if browser is supported\\n   *\\n   * @param  {Object} minVersions map of minimal version to browser\\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\\n   * @param  {String}  [ua] user agent string\\n   * @return {Boolean}\\n   */\\n  function check(minVersions, strictMode, ua) {\\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\\n  }\\n\\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\\n  bowser.compareVersions = compareVersions;\\n  bowser.check = check;\\n\\n  /*\\n   * Set our detect method to the main bowser object so we can\\n   * reuse it to test other user agents.\\n   * This is needed to implement future tests.\\n   */\\n  bowser._detect = detect;\\n\\n  /*\\n   * Set our detect public method to the main bowser object\\n   * This is needed to implement bowser in server side\\n   */\\n  bowser.detect = detect;\\n  return bowser\\n});\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"root\",\"name\",\"definition\",\"define\",\"amd\",\"detect\",\"ua\",\"getFirstMatch\",\"regex\",\"match\",\"length\",\"getSecondMatch\",\"getWindowsVersion\",\"s\",\"iosdevice\",\"toLowerCase\",\"android\",\"test\",\"likeAndroid\",\"nexusMobile\",\"nexusTablet\",\"chromeos\",\"silk\",\"sailfish\",\"tizen\",\"webos\",\"windowsphone\",\"windows\",\"mac\",\"linux\",\"edgeVersion\",\"versionIdentifier\",\"tablet\",\"mobile\",\"xbox\",\"result\",\"opera\",\"t\",\"version\",\"samsungBrowser\",\"coast\",\"yandexbrowser\",\"ucbrowser\",\"maxthon\",\"epiphany\",\"puffin\",\"sleipnir\",\"kMeleon\",\"osname\",\"msedge\",\"msie\",\"chromeBook\",\"chrome\",\"vivaldi\",\"seamonkey\",\"firefox\",\"firefoxos\",\"phantom\",\"slimer\",\"blackberry\",\"touchpad\",\"bada\",\"qupzilla\",\"chromium\",\"safari\",\"googlebot\",\"blink\",\"webkit\",\"gecko\",\"ios\",\"osVersion\",\"replace\",\"osversion\",\"osMajorVersion\",\"split\",\"a\",\"c\",\"x\",\"map\",\"arr\",\"iterator\",\"i\",\"Array\",\"prototype\",\"call\",\"push\",\"compareVersions\",\"versions\",\"precision\",\"Math\",\"max\",\"chunks\",\"delta\",\"join\",\"chunk\",\"reverse\",\"isUnsupportedBrowser\",\"minVersions\",\"strictMode\",\"_bowser\",\"bowser\",\"browser\",\"hasOwnProperty\",\"Error\",\"String\",\"navigator\",\"userAgent\",\"bowser.test\",\"browserList\",\"browserItem\",\"check\",\"_detect\"]\n}\n"]