["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/emptyFunction.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$emptyFunction=function(k,A,f,m,F){function c(c){return function(){return c}}k=function(){};k.thatReturns=c;k.thatReturnsFalse=c(!1);k.thatReturnsTrue=c(!0);k.thatReturnsNull=c(null);k.thatReturnsThis=function(){return this};k.thatReturnsArgument=function(c){return c};m.exports=k}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$emptyFunction\"] = function(global,process,require,module,exports) {\n\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["thatReturnsArgument","thatReturnsFalse","thatReturnsNull","thatReturns","thatReturnsThis","thatReturnsTrue"]],"~:compiled-at",1519925395197,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$emptyFunction.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,2CAAA,CAA+D,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAY/GC,QAASA,EAAiB,CAACC,CAAD,CAAM,CAC9B,MAAO,SAAS,EAAG,CACjB,MAAOA,EADU,CADW,CAW5BC,CAAAA,CAAgBA,QAAsB,EAAG,EAE7CA,EAAAC,YAAA,CAA4BH,CAC5BE,EAAAE,iBAAA,CAAiCJ,CAAA,CAAkB,CAAA,CAAlB,CACjCE,EAAAG,gBAAA,CAAgCL,CAAA,CAAkB,CAAA,CAAlB,CAChCE,EAAAI,gBAAA,CAAgCN,CAAA,CAAkB,IAAlB,CAChCE,EAAAK,gBAAA,CAAgCC,QAAS,EAAG,CAC1C,MAAO,KADmC,CAG5CN,EAAAO,oBAAA,CAAoCC,QAAS,CAACT,CAAD,CAAM,CACjD,MAAOA,EAD0C,CAInDH,EAAAC,QAAA,CAAiBG,CApC8F;\",\n\"sources\":[\"node_modules/fbjs/lib/emptyFunction.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$emptyFunction\\\"] = function(global,process,require,module,exports) {\\n\\\"use strict\\\";\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * \\n */\\n\\nfunction makeEmptyFunction(arg) {\\n  return function () {\\n    return arg;\\n  };\\n}\\n\\n/**\\n * This function accepts and discards inputs; it has no side effects. This is\\n * primarily useful idiomatically for overridable function endpoints which\\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\\n */\\nvar emptyFunction = function emptyFunction() {};\\n\\nemptyFunction.thatReturns = makeEmptyFunction;\\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\\nemptyFunction.thatReturnsThis = function () {\\n  return this;\\n};\\nemptyFunction.thatReturnsArgument = function (arg) {\\n  return arg;\\n};\\n\\nmodule.exports = emptyFunction;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"makeEmptyFunction\",\"arg\",\"emptyFunction\",\"thatReturns\",\"thatReturnsFalse\",\"thatReturnsTrue\",\"thatReturnsNull\",\"thatReturnsThis\",\"emptyFunction.thatReturnsThis\",\"thatReturnsArgument\",\"emptyFunction.thatReturnsArgument\"]\n}\n"]