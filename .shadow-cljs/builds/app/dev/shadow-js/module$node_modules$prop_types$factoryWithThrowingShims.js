["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/prop-types/factoryWithThrowingShims.js"],"~:js","shadow$provide.module$node_modules$prop_types$factoryWithThrowingShims=function(b,e,a,d,f){var c=a(\"module$node_modules$fbjs$lib$emptyFunction\"),g=a(\"module$node_modules$fbjs$lib$invariant\"),h=a(\"module$node_modules$prop_types$lib$ReactPropTypesSecret\");d.exports=function(){function a(a,b,c,d,e,f){f!==h&&g(!1,\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\")}function b(){return a}\na.isRequired=a;var d={array:a,bool:a,func:a,number:a,object:a,string:a,symbol:a,any:a,arrayOf:b,element:a,instanceOf:b,node:a,objectOf:b,oneOf:b,oneOfType:b,shape:b,exact:b};d.checkPropTypes=c;return d.PropTypes=d}}","~:source","shadow$provide[\"module$node_modules$prop_types$factoryWithThrowingShims\"] = function(global,process,require,module,exports) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$prop_types$lib$ReactPropTypesSecret","~$module$node_modules$fbjs$lib$emptyFunction"]],"~:properties",["^5",["func","arrayOf","instanceOf","object","string","exact","shape","oneOfType","any","element","bool","checkPropTypes","number","symbol","objectOf","oneOf","array","PropTypes","node","isRequired"]],"~:compiled-at",1519929620002,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$prop_types$factoryWithThrowingShims.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAU5H,IAAIC,EAAgBH,CAAA,CAAQ,4CAAR,CAApB,CACII,EAAYJ,CAAA,CAAQ,wCAAR,CADhB,CAEIK,EAAuBL,CAAA,CAAQ,yDAAR,CAE3BC,EAAAC,QAAA,CAAiBI,QAAQ,EAAG,CAC1BC,QAASA,EAAI,CAACC,CAAD,CAAQC,CAAR,CAAkBC,CAAlB,CAAiCC,CAAjC,CAA2CC,CAA3C,CAAyDC,CAAzD,CAAiE,CACxEA,CAAJ,GAAeR,CAAf,EAIAD,CAAA,CACE,CAAA,CADF,CAEE,iLAFF,CAL4E,CAa9EU,QAASA,EAAO,EAAG,CACjB,MAAOP,EADU;AADnBA,CAAAQ,WAAA,CAAkBR,CAMlB,KAAIS,EAAiB,CACnBC,MAAOV,CADY,CAEnBW,KAAMX,CAFa,CAGnBY,KAAMZ,CAHa,CAInBa,OAAQb,CAJW,CAKnBc,OAAQd,CALW,CAMnBe,OAAQf,CANW,CAOnBgB,OAAQhB,CAPW,CASnBiB,IAAKjB,CATc,CAUnBkB,QAASX,CAVU,CAWnBY,QAASnB,CAXU,CAYnBoB,WAAYb,CAZO,CAanBc,KAAMrB,CAba,CAcnBsB,SAAUf,CAdS,CAenBgB,MAAOhB,CAfY,CAgBnBiB,UAAWjB,CAhBQ,CAiBnBkB,MAAOlB,CAjBY,CAkBnBmB,MAAOnB,CAlBY,CAqBrBE,EAAAkB,eAAA,CAAgC/B,CAGhC,OAFAa,EAAAmB,UAEA,CAF2BnB,CAzCD,CAdgG;\",\n\"sources\":[\"node_modules/prop-types/factoryWithThrowingShims.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$prop_types$factoryWithThrowingShims\\\"] = function(global,process,require,module,exports) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';\\n\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar invariant = require('fbjs/lib/invariant');\\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\\n\\nmodule.exports = function() {\\n  function shim(props, propName, componentName, location, propFullName, secret) {\\n    if (secret === ReactPropTypesSecret) {\\n      // It is still safe when called from React.\\n      return;\\n    }\\n    invariant(\\n      false,\\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\\n      'Use PropTypes.checkPropTypes() to call them. ' +\\n      'Read more at http://fb.me/use-check-prop-types'\\n    );\\n  };\\n  shim.isRequired = shim;\\n  function getShim() {\\n    return shim;\\n  };\\n  // Important!\\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\\n  var ReactPropTypes = {\\n    array: shim,\\n    bool: shim,\\n    func: shim,\\n    number: shim,\\n    object: shim,\\n    string: shim,\\n    symbol: shim,\\n\\n    any: shim,\\n    arrayOf: getShim,\\n    element: shim,\\n    instanceOf: getShim,\\n    node: shim,\\n    objectOf: getShim,\\n    oneOf: getShim,\\n    oneOfType: getShim,\\n    shape: getShim,\\n    exact: getShim\\n  };\\n\\n  ReactPropTypes.checkPropTypes = emptyFunction;\\n  ReactPropTypes.PropTypes = ReactPropTypes;\\n\\n  return ReactPropTypes;\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"emptyFunction\",\"invariant\",\"ReactPropTypesSecret\",\"module.exports\",\"shim\",\"props\",\"propName\",\"componentName\",\"location\",\"propFullName\",\"secret\",\"getShim\",\"isRequired\",\"ReactPropTypes\",\"array\",\"bool\",\"func\",\"number\",\"object\",\"string\",\"symbol\",\"any\",\"arrayOf\",\"element\",\"instanceOf\",\"node\",\"objectOf\",\"oneOf\",\"oneOfType\",\"shape\",\"exact\",\"checkPropTypes\",\"PropTypes\"]\n}\n"]