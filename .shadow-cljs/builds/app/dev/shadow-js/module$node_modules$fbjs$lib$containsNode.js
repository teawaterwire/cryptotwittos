["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/containsNode.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$containsNode=function(k,A,f,m,F){function c(e,f){return e&&f?e===f?!0:q(e)?!1:q(f)?c(e,f.parentNode):\"contains\"in e?e.contains(f):e.compareDocumentPosition?!!(e.compareDocumentPosition(f)&16):!1:!1}var q=f(\"module$node_modules$fbjs$lib$isTextNode\");m.exports=c}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$containsNode\"] = function(global,process,require,module,exports) {\n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$fbjs$lib$isTextNode","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1519925395297,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$containsNode.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,0CAAA,CAA8D,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAAwC,CAmB9GC,QAASA,EAAY,CAACC,CAAD,CAAYC,CAAZ,CAAuB,CAC1C,MAAKD,EAAL,EAAmBC,CAAnB,CAEWD,CAAJ,GAAkBC,CAAlB,CACE,CAAA,CADF,CAEIC,CAAA,CAAWF,CAAX,CAAJ,CACE,CAAA,CADF,CAEIE,CAAA,CAAWD,CAAX,CAAJ,CACEF,CAAA,CAAaC,CAAb,CAAwBC,CAAAE,WAAxB,CADF,CAEI,UAAJ,EAAkBH,EAAlB,CACEA,CAAAI,SAAA,CAAmBH,CAAnB,CADF,CAEID,CAAAK,wBAAJ,CACE,CAAC,EAAEL,CAAAK,wBAAA,CAAkCJ,CAAlC,CAAF,CAAiD,EAAjD,CADH,CAGE,CAAA,CAbT,CACS,CAAA,CAFiC,CAP5C,IAAIC,EAAaN,CAAA,CAAQ,yCAAR,CAyBjBC,EAAAC,QAAA,CAAiBC,CArC6F;\",\n\"sources\":[\"node_modules/fbjs/lib/containsNode.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$containsNode\\\"] = function(global,process,require,module,exports) {\\n'use strict';\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * \\n */\\n\\nvar isTextNode = require('./isTextNode');\\n\\n/*eslint-disable no-bitwise */\\n\\n/**\\n * Checks if a given DOM node contains or is another DOM node.\\n */\\nfunction containsNode(outerNode, innerNode) {\\n  if (!outerNode || !innerNode) {\\n    return false;\\n  } else if (outerNode === innerNode) {\\n    return true;\\n  } else if (isTextNode(outerNode)) {\\n    return false;\\n  } else if (isTextNode(innerNode)) {\\n    return containsNode(outerNode, innerNode.parentNode);\\n  } else if ('contains' in outerNode) {\\n    return outerNode.contains(innerNode);\\n  } else if (outerNode.compareDocumentPosition) {\\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\\n  } else {\\n    return false;\\n  }\\n}\\n\\nmodule.exports = containsNode;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"containsNode\",\"outerNode\",\"innerNode\",\"isTextNode\",\"parentNode\",\"contains\",\"compareDocumentPosition\"]\n}\n"]